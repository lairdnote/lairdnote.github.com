<!DOCTYPE html>



  


<html class="theme-next muse use-motion" lang="en">
<head>
  <meta charset="UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
<meta name="theme-color" content="#222">









<meta http-equiv="Cache-Control" content="no-transform" />
<meta http-equiv="Cache-Control" content="no-siteapp" />
















  
  
  <link href="/lib/fancybox/source/jquery.fancybox.css?v=2.1.5" rel="stylesheet" type="text/css" />







<link href="/lib/font-awesome/css/font-awesome.min.css?v=4.6.2" rel="stylesheet" type="text/css" />

<link href="/css/main.css?v=5.1.4" rel="stylesheet" type="text/css" />


  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png?v=5.1.4">


  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png?v=5.1.4">


  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png?v=5.1.4">


  <link rel="mask-icon" href="/images/logo.svg?v=5.1.4" color="#222">





  <meta name="keywords" content="facebook,asp net mvc,bigpipe," />










<meta name="description" content="Last part of my tutorial on Implementing BigPipe, focused on browser side, loading CSS and JS resources efficiently using a small script.">
<meta property="og:type" content="article">
<meta property="og:title" content="Tutorial: Implementing Facebook&#39;s BigPipe Using ASP.Net MVC - Part 3">
<meta property="og:url" content="https://blog.feedscoin.com/tutorial-how-to-implement-bigpipe-using-asp-net-mvc-part-3">
<meta property="og:site_name" content="逐流小站">
<meta property="og:description" content="Last part of my tutorial on Implementing BigPipe, focused on browser side, loading CSS and JS resources efficiently using a small script.">
<meta property="og:locale" content="en_US">
<meta property="og:image" content="https://blog.feedscoin.com/assets/images/posts/bigpipe-02.jpg">
<meta property="article:published_time" content="2010-09-27T11:25:11.000Z">
<meta property="article:modified_time" content="2024-01-15T07:11:20.000Z">
<meta property="article:author" content="Laird Lau">
<meta property="article:tag" content="facebook">
<meta property="article:tag" content="asp net mvc">
<meta property="article:tag" content="bigpipe">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://blog.feedscoin.com/assets/images/posts/bigpipe-02.jpg">



<script type="text/javascript" id="hexo.configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '',
    scheme: 'Muse',
    version: '5.1.4',
    sidebar: {"position":"left","display":"post","offset":12,"b2t":false,"scrollpercent":false,"onmobile":false},
    fancybox: true,
    tabs: true,
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    duoshuo: {
      userId: '0',
      author: 'Author'
    },
    algolia: {
      applicationID: '',
      apiKey: '',
      indexName: '',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    }
  };
</script>



  <link rel="canonical" href="https://blog.feedscoin.com/tutorial-how-to-implement-bigpipe-using-asp-net-mvc-part-3"/>





  <title>Tutorial: Implementing Facebook's BigPipe Using ASP.Net MVC - Part 3 | 逐流小站</title>
  





<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-MW47YH6RH0"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-MW47YH6RH0');
</script>





<meta name="generator" content="Hexo 7.0.0"></head>

<body itemscope itemtype="http://schema.org/WebPage" lang="en">

  
  
    
  

  <div class="container sidebar-position-left page-post-detail">
    <div class="headband"></div>

    <header id="header" class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-wrapper">
  <div class="site-meta ">
    

    <div class="custom-logo-site-title">
      <a href="/"  class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">逐流小站</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
      
        <h1 class="site-subtitle" itemprop="description">想回到那个能随便跳槽的年代</h1>
      
  </div>

  <div class="site-nav-toggle">
    <button>
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
    </button>
  </div>
</div>

<nav class="site-nav">
  

  
    <ul id="menu" class="menu">
      
        
        <li class="menu-item menu-item-home">
          <a href="/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-home"></i> <br />
            
            Home
          </a>
        </li>
      
        
        <li class="menu-item menu-item-tags">
          <a href="/tags/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-tags"></i> <br />
            
            Tags
          </a>
        </li>
      
        
        <li class="menu-item menu-item-categories">
          <a href="/categories/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-th"></i> <br />
            
            Categories
          </a>
        </li>
      
        
        <li class="menu-item menu-item-archives">
          <a href="/archives/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-archive"></i> <br />
            
            Archives
          </a>
        </li>
      
        
        <li class="menu-item menu-item-sitemap">
          <a href="/sitemap.xml" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-sitemap"></i> <br />
            
            Sitemap
          </a>
        </li>
      

      
    </ul>
  

  
</nav>



 </div>
    </header>

    <main id="main" class="main">
      <div class="main-inner">
        <div class="content-wrap">
          <div id="content" class="content">
            

  <div id="posts" class="posts-expand">
    

  

  
  
  

  <article class="post post-type-normal" itemscope itemtype="http://schema.org/Article">
  
  
  
  <div class="post-block">
    <link itemprop="mainEntityOfPage" href="https://blog.feedscoin.com/tutorial-how-to-implement-bigpipe-using-asp-net-mvc-part-3">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="name" content="">
      <meta itemprop="description" content="">
      <meta itemprop="image" content="/images/avatar.gif">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="逐流小站">
    </span>

    
      <header class="post-header">

        
        
          <h2 class="post-title" itemprop="name headline">Tutorial: Implementing Facebook's BigPipe Using ASP.Net MVC - Part 3</h2>
        

        <div class="post-meta">
          <span class="post-time">
            
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              
                <span class="post-meta-item-text">Posted on</span>
              
              <time title="Post created" itemprop="dateCreated datePublished" datetime="2010-09-27T19:25:11+08:00">
                2010-09-27
              </time>
            

            

            
          </span>

          

          
            
          

          
          

          

          

          
              <div class="post-description">
                  Last part of my tutorial on Implementing BigPipe, focused on browser side, loading CSS and JS resources efficiently using a small script.
              </div>
          

        </div>
      </header>
    

    
    
    
    <div class="post-body" itemprop="articleBody">
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4522670236044605"
     crossorigin="anonymous"></script>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-4522670236044605"
     data-ad-slot="5167312561"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
      
      

      

        <p>Parts of the tutorial</p>
<ol>
<li><a href="/tutorial-how-to-implement-bigpipe-using-asp-net-mvc-part-1">Introduction to BigPipe</a></li>
<li><a href="/tutorial-how-to-implement-bigpipe-using-asp-net-mvc-part-2">How ASP.Net MVC fits in the model. Registering and generating<br>pagelets</a></li>
<li>Browser implementation of BigPipe. Loading pagelets and their<br>resources effectively</li>
<li><a target="_blank" rel="noopener" href="https://github.com/JMPerez/BigPipe">Check out the demo Visual Studio solution</a></li>
</ol>
<p>In this third part of the tutorial to carry out a technique similar to BigPipe I will cover the browser side. BigPipe is not only focused on server side, but it also sets how the different resources that our pagelets need have to be requested and loaded in the document.</p>
<!-- more -->
<h2 id="Registering-a-pagelet-and-its-resources"><a href="#Registering-a-pagelet-and-its-resources" class="headerlink" title="Registering a pagelet and its resources"></a>Registering a pagelet and its resources</h2><p>In the Pagelet class I will declare a constructor that accepts a list of CSS files and a list of JavaScript files needed by the pagelet:</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Pagelet</span>(<span class="params"><span class="built_in">string</span> container, Func&lt;<span class="built_in">string</span>&gt; action, IEnumerable&lt;<span class="built_in">string</span>&gt; css, IEnumerable&lt;<span class="built_in">string</span>&gt; js</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>.Container = container;</span><br><span class="line">    <span class="keyword">this</span>.Action = action;</span><br><span class="line">    <span class="keyword">this</span>.Data = <span class="keyword">new</span> Data()</span><br><span class="line">    &#123;</span><br><span class="line">        Id = container,</span><br><span class="line">        Css = css,</span><br><span class="line">        Js = js</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>In my sample code I am registering two pagelets in the View:</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%  HttpRequest req = HttpContext.Current.Request;</span><br><span class="line">    Html.RegisterPagelet(<span class="keyword">new</span> Pagelet(</span><br><span class="line">        <span class="string">&quot;pagelet1-pagelet&quot;</span>,</span><br><span class="line">        () =&gt; Html.RenderActionToString(req, <span class="string">&quot;home&quot;</span>, <span class="string">&quot;pagelet1&quot;</span>),</span><br><span class="line">        <span class="keyword">new</span> []&#123;<span class="string">&quot;../../Content/Pagelet1.css&quot;</span>&#125;,</span><br><span class="line">        <span class="keyword">new</span> []&#123;<span class="string">&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&quot;</span>,</span><br><span class="line">                <span class="string">&quot;../../Scripts/Pagelet1.js&quot;</span>&#125;</span><br><span class="line">    )); %&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">&lt;% Html.RegisterPagelet(<span class="keyword">new</span> Pagelet(</span><br><span class="line">    <span class="string">&quot;pagelet2-pagelet&quot;</span>,</span><br><span class="line">    () =&gt; Html.RenderActionToString(req, <span class="string">&quot;home&quot;</span>, <span class="string">&quot;pagelet2&quot;</span>),</span><br><span class="line">    <span class="keyword">new</span>[] &#123; <span class="string">&quot;../../Content/Pagelet2.css&quot;</span> &#125;,</span><br><span class="line">    <span class="literal">null</span></span><br><span class="line">    )); %&gt;</span><br></pre></td></tr></table></figure>

<p>As I said before, <code>Html.Action()</code> method can be used to store the result<br>of an action in a string. However, it may throw exception if you use<br>multi-threading to execute the different pagelets since it doesn’t keep<br>a reference to original request. In fact, we are storing the current<br>request in the <code>req</code> variable to avoid this exception when using<br><code>Html.RenderActionToString</code>. If you’d rather use a single-threaded <code>for</code><br>to go through the pagelets in the <code>ExecutePagelets</code> method (i.e. if you<br>see that parallel <code>for</code> implies too much overload), then go for the<br><code>Action</code> method.</p>
<h2 id="Facebook’s-approach"><a href="#Facebook’s-approach" class="headerlink" title="Facebook’s approach"></a>Facebook’s approach</h2><p>In this tutorial I am implementing a simple solution covering BigPipe<br>principles from server to browser. However, Facebook’s implementation<br>is far more complex, taking into account resource dependencies and<br>events. If we have a look at a sample call to their <code>onPageletArrive</code><br>Javascript function, we can see that they pass a JSON object similar to<br>this one:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;,</span></span><br><span class="line"><span class="string">    &quot;</span>phase<span class="string">&quot;: 4,</span></span><br><span class="line"><span class="string">    &quot;</span>is_last<span class="string">&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;</span>append<span class="string">&quot;: false,</span></span><br><span class="line"><span class="string">    &quot;</span>bootloadable<span class="string">&quot;: [</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>css<span class="string">&quot;: [</span></span><br><span class="line"><span class="string">        &quot;</span>MPQqY<span class="string">&quot;,</span></span><br><span class="line"><span class="string">        &quot;</span>uwtW6<span class="string">&quot;,</span></span><br><span class="line"><span class="string">        &quot;</span>wWhUT<span class="string">&quot;</span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>js<span class="string">&quot;: [</span></span><br><span class="line"><span class="string">        &quot;</span>RpPeo<span class="string">&quot;,</span></span><br><span class="line"><span class="string">        &quot;</span>C9ueD<span class="string">&quot;,</span></span><br><span class="line"><span class="string">        &quot;</span>q+PxV<span class="string">&quot;,</span></span><br><span class="line"><span class="string">        &quot;</span>Ok1Y0<span class="string">&quot;,</span></span><br><span class="line"><span class="string">        &quot;</span>dOwRG<span class="string">&quot;</span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>resource_map<span class="string">&quot;: [</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>requires<span class="string">&quot;: [</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>provides<span class="string">&quot;: [</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>onload<span class="string">&quot;: [</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>onafterload<span class="string">&quot;: [</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>onpagecache<span class="string">&quot;: [</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>onafterpagecache<span class="string">&quot;: [</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>refresh_pagelets<span class="string">&quot;: [</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>invalidate_cache<span class="string">&quot;: [</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>content<span class="string">&quot;: [</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ],</span></span><br><span class="line"><span class="string">    &quot;</span>page_cache<span class="string">&quot;: false</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<p>From there, we will cover <code>id</code>, <code>css</code>, <code>js</code> and <code>content</code> fields. Most<br>of the rest of fields are self-explainable, and they could be<br>implemented easily on our basic BigPipe implementation.</p>
<h2 id="Javascript-detection"><a href="#Javascript-detection" class="headerlink" title="Javascript detection"></a>Javascript detection</h2><p>We will detect Javascript using a cookie that will be written using<br>Javascript. The first request to our page will not send that cookie, so<br>we will serve a non-BigPipe version. I prefer this to making a<br>redirection to the same page if Javascript is enabled.</p>
<p>In the Site.Master, just before ending body tag we can add the Javascript detection code:</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (Request.Cookies[<span class="string">&quot;js&quot;</span>] == <span class="literal">null</span>) &#123; %&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> exdate=<span class="keyword">new</span> Date();</span><br><span class="line">exdate.setDate(exdate.getDate()+<span class="number">90</span>);</span><br><span class="line">document.cookie = <span class="string">&quot;js=true;expires=&quot;</span> + exdate.toUTCString();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Loading-CSS-and-JS"><a href="#Loading-CSS-and-JS" class="headerlink" title="Loading CSS and JS"></a>Loading CSS and JS</h2><p>We will need a basic Javascript script that allows us:</p>
<ul>
<li>Load in parallel the set of CSS resources needed by each pagelet</li>
<li>Append the HTML code of a pagelet inside its container</li>
<li>Request in parallel all the Javascript files needed by the set of<br>pagelets, once they all have been appended to the document, and<br>execute them</li>
</ul>
<p>Moreover, the size of the script has to be as small as possible, since<br>it will be a blocking script.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">Loader</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> d = <span class="variable language_">document</span>,</span><br><span class="line">        head = d.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> loadJs = <span class="keyword">function</span> (<span class="params">url, cb</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> script = d.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">        script.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, url);</span><br><span class="line">        script.<span class="title function_">setAttribute</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/javascript&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> loaded = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span> loadFunction = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (loaded) <span class="keyword">return</span>;</span><br><span class="line">            loaded = <span class="literal">true</span>;</span><br><span class="line">            cb &amp;amp;&amp;amp; <span class="title function_">cb</span>();</span><br><span class="line">        &#125;;</span><br><span class="line">        script.<span class="property">onload</span> = loadFunction;</span><br><span class="line">        script.<span class="property">onreadystatechange</span> = loadFunction;</span><br><span class="line">        head.<span class="title function_">appendChild</span>(script);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> cachedBrowser;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> browser = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!cachedBrowser) &#123;</span><br><span class="line">            <span class="keyword">var</span> ua = navigator.<span class="property">userAgent</span>.<span class="title function_">toLowerCase</span>();</span><br><span class="line">            <span class="keyword">var</span> match = <span class="regexp">/(webkit)[ \/]([\w.]+)/</span>.<span class="title function_">exec</span>(ua) ||</span><br><span class="line">			<span class="regexp">/(opera)(?:.*version)?[ \/]([\w.]+)/</span>.<span class="title function_">exec</span>(ua) ||</span><br><span class="line">			<span class="regexp">/(msie) ([\w.]+)/</span>.<span class="title function_">exec</span>(ua) ||</span><br><span class="line">			!<span class="regexp">/compatible/</span>.<span class="title function_">test</span>(ua) &amp;amp;&amp;amp; <span class="regexp">/(mozilla)(?:.*? rv:([\w.]+))?/</span>.<span class="title function_">exec</span>(ua) ||</span><br><span class="line">			[];</span><br><span class="line">            cachedBrowser = match[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cachedBrowser;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> loadCss = <span class="keyword">function</span> (<span class="params">url, cb</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> link = d.<span class="title function_">createElement</span>(<span class="string">&quot;link&quot;</span>);</span><br><span class="line">        link.<span class="property">type</span> = <span class="string">&quot;text/css&quot;</span>;</span><br><span class="line">        link.<span class="property">rel</span> = <span class="string">&quot;stylesheet&quot;</span>;</span><br><span class="line">        link.<span class="property">href</span> = url;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">browser</span>() == <span class="string">&quot;msie&quot;</span>)</span><br><span class="line">            link.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="regexp">/loaded|complete/</span>.<span class="title function_">test</span>(link.<span class="property">readyState</span>) &amp;amp;&amp;amp; <span class="title function_">cb</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="title function_">browser</span>() == <span class="string">&quot;opera&quot;</span>)</span><br><span class="line">            link.<span class="property">onload</span> = cb;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="comment">//FF, Safari, Chrome</span></span><br><span class="line">            (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    link.<span class="property">sheet</span>.<span class="property">cssRule</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                    <span class="built_in">setTimeout</span>(<span class="variable language_">arguments</span>.<span class="property">callee</span>, <span class="number">20</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;;</span><br><span class="line">                <span class="title function_">cb</span>();</span><br><span class="line">            &#125;)();</span><br><span class="line"></span><br><span class="line">        head.<span class="title function_">appendChild</span>(link);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">loadCss</span>: loadCss, <span class="attr">loadJs</span>: loadJs &#125;;</span><br><span class="line"></span><br><span class="line">&#125; ();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">PageLet</span>(<span class="params">p, domInserted</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> data = p,</span><br><span class="line">	remainingCss = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> loadCss = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">//load css</span></span><br><span class="line">        <span class="keyword">if</span> (data.<span class="property">Css</span> &amp;amp;&amp;amp; data.<span class="property">Css</span>.<span class="property">length</span>) &#123;</span><br><span class="line">            remainingCss = data.<span class="property">Css</span>.<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = remainingCss; i--; )</span><br><span class="line">                <span class="title class_">Loader</span>.<span class="title function_">loadCss</span>(data.<span class="property">Css</span>[i], <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    ! --remainingCss &amp;amp;&amp;amp; <span class="title function_">insertDom</span>();</span><br><span class="line">                &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="title function_">insertDom</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> insertDom = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(p.<span class="property">Id</span>).<span class="property">innerHTML</span> = p.<span class="property">Content</span>;</span><br><span class="line">        <span class="title function_">domInserted</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> loadJs = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!data.<span class="property">Js</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//load js</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">Js</span>.<span class="property">length</span>; i++)</span><br><span class="line">            <span class="title class_">Loader</span>.<span class="title function_">loadJs</span>(data.<span class="property">Js</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">loadCss</span>: loadCss, <span class="attr">loadJs</span>: loadJs &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">BigPipe</span> = <span class="keyword">function</span> (<span class="params">count</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> d = <span class="variable language_">document</span>,</span><br><span class="line">       pagelets = []; 		<span class="comment">/* registered pagelets */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> onPageletArrive = <span class="keyword">function</span> (<span class="params">p</span>) &#123;</span><br><span class="line">        count = count || p.<span class="property">count</span>;</span><br><span class="line">        <span class="keyword">var</span> pagelet = <span class="keyword">new</span> <span class="title class_">PageLet</span>(p, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (! --count) &#123;</span><br><span class="line">                <span class="comment">//load js</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pagelets.<span class="property">length</span>; i++)</span><br><span class="line">                    pagelets[i].<span class="title function_">loadJs</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        pagelets.<span class="title function_">push</span>(pagelet);</span><br><span class="line">        pagelet.<span class="title function_">loadCss</span>();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">onPageletArrive</span>: onPageletArrive &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Once minimized using Google Closure, the size is 1.27KB (666 bytes gzipped), so we have a very small script that fits our requirements.</p>
<h2 id="Resources-chart"><a href="#Resources-chart" class="headerlink" title="Resources chart"></a>Resources chart</h2><p>The following chart shows how resources are loaded:<br><img src="/assets/images/posts/bigpipe-02.jpg" alt="Resources loading graph using BigPipe"></p>
<p>We can see that the main document flushes early, starting the requests for Site.css<br>and BigPipe.js, which are in the head section of our view. When pagelets<br>are executed (I have set a Thread.Sleep in both pagelets) their CSS<br>resources are requested and only after they have been appended to the<br>document their Javascript resources are downloaded and executed.</p>
<h2 id="Further-improvements"><a href="#Further-improvements" class="headerlink" title="Further improvements"></a>Further improvements</h2><p>There are a lot of points that can be improved. I have thought of<br>several of them, what could lead to a more complex solution that can<br>provide BigPipe to ASP.Net MVC in a not so experimental way.</p>
<h3 id="Fire-event-before-starting-loading-js-for-pagelets"><a href="#Fire-event-before-starting-loading-js-for-pagelets" class="headerlink" title="Fire event before starting loading js for pagelets"></a>Fire event before starting loading js for pagelets</h3><p>Scripts that are needed by the page but do not need to be loaded before<br>executing pagelets can be delayed and be requested when the pagelets’<br>scripts are.</p>
<h3 id="Manage-dependencies-between-scripts"><a href="#Manage-dependencies-between-scripts" class="headerlink" title="Manage dependencies between scripts"></a>Manage dependencies between scripts</h3><p>As Facebook does, it can be a good idea to incorporate dependencies<br>solving logic to request and execute JavaScript resources in the best<br>order.</p>
<p>Avoid double insertion. If two pagelets require the same script, it is<br>only necessary to request once.</p>
<h3 id="Manage-pagelets-resources-in-a-unique-place"><a href="#Manage-pagelets-resources-in-a-unique-place" class="headerlink" title="Manage pagelets resources in a unique place"></a>Manage pagelets resources in a unique place</h3><p>In my solution, pagelets’ resources are specified in the view that is<br>including them. If we decide to change the implementation of a pagelet<br>and now we need a different set of resources (i.e. an extra JS resource)</p>
<h2 id="Drawbacks-of-this-implementation"><a href="#Drawbacks-of-this-implementation" class="headerlink" title="Drawbacks of this implementation"></a>Drawbacks of this implementation</h2><p>At first I see a performance problem when the browser does not support<br>Javascript. As we are registering pagelets as PartialViews rendered<br>inside the body ContentPlaceHolder, we have no way to include CSS<br>resources back to the head section, since it has already been generated.<br>So we have to include the CSS link elements inside the body, blocking<br>renderization.</p>
<p>The good thing is that we save bytes not writing script elements when we<br>detect the browser has JavaScript disabled.</p>

      
    </div>
    
    
    

    


    

    

    <footer class="post-footer">
      
        <div class="post-tags">
          
            <a href="/tags/facebook/" rel="tag"># facebook</a>
          
            <a href="/tags/asp-net-mvc/" rel="tag"># asp net mvc</a>
          
            <a href="/tags/bigpipe/" rel="tag"># bigpipe</a>
          
        </div>
      

      
      
      

      
        <div class="post-nav">
          <div class="post-nav-next post-nav-item">
            
              <a href="/tutorial-how-to-implement-bigpipe-using-asp-net-mvc-part-2" rel="next" title="Tutorial: Implementing Facebook's BigPipe Using ASP.Net MVC - Part 2">
                <i class="fa fa-chevron-left"></i> Tutorial: Implementing Facebook's BigPipe Using ASP.Net MVC - Part 2
              </a>
            
          </div>

          <span class="post-nav-divider"></span>

          <div class="post-nav-prev post-nav-item">
            
              <a href="/ondemand-javascript-lazy-loading-stubs" rel="prev" title="Lazy loading Javascript: On-demand scripts to faster load times">
                Lazy loading Javascript: On-demand scripts to faster load times <i class="fa fa-chevron-right"></i>
              </a>
            
          </div>
        </div>
      

      
      
    </footer>
  </div>
  
  
  
  </article>



    <div class="post-spread">
      
    </div>
  </div>


          </div>
          


          

  



        </div>
        
          
  
  <div class="sidebar-toggle">
    <div class="sidebar-toggle-line-wrap">
      <span class="sidebar-toggle-line sidebar-toggle-line-first"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-middle"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-last"></span>
    </div>
  </div>

  <aside id="sidebar" class="sidebar">
    
    <div class="sidebar-inner">

      

      
        <ul class="sidebar-nav motion-element">
          <li class="sidebar-nav-toc sidebar-nav-active" data-target="post-toc-wrap">
            Table of Contents
          </li>
          <li class="sidebar-nav-overview" data-target="site-overview-wrap">
            Overview
          </li>
        </ul>
      

      <section class="site-overview-wrap sidebar-panel">
        <div class="site-overview">
          <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
            
              <p class="site-author-name" itemprop="name"></p>
              <p class="site-description motion-element" itemprop="description"></p>
          </div>

          <nav class="site-state motion-element">

            
              <div class="site-state-item site-state-posts">
              
                <a href="/archives/%7C%7C%20archive">
              
                  <span class="site-state-item-count">1451</span>
                  <span class="site-state-item-name">posts</span>
                </a>
              </div>
            

            
              
              
              <div class="site-state-item site-state-categories">
                <a href="/categories/index.html">
                  <span class="site-state-item-count">71</span>
                  <span class="site-state-item-name">categories</span>
                </a>
              </div>
            

            
              
              
              <div class="site-state-item site-state-tags">
                <a href="/tags/index.html">
                  <span class="site-state-item-count">914</span>
                  <span class="site-state-item-name">tags</span>
                </a>
              </div>
            

          </nav>

          

          

          
          

          
          

          

        </div>
      </section>

      
      <!--noindex-->
        <section class="post-toc-wrap motion-element sidebar-panel sidebar-panel-active">
          <div class="post-toc">

            
              
            

            
              <div class="post-toc-content"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#Registering-a-pagelet-and-its-resources"><span class="nav-number">1.</span> <span class="nav-text">Registering a pagelet and its resources</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Facebook%E2%80%99s-approach"><span class="nav-number">2.</span> <span class="nav-text">Facebook’s approach</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Javascript-detection"><span class="nav-number">3.</span> <span class="nav-text">Javascript detection</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Loading-CSS-and-JS"><span class="nav-number">4.</span> <span class="nav-text">Loading CSS and JS</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Resources-chart"><span class="nav-number">5.</span> <span class="nav-text">Resources chart</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Further-improvements"><span class="nav-number">6.</span> <span class="nav-text">Further improvements</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#Fire-event-before-starting-loading-js-for-pagelets"><span class="nav-number">6.1.</span> <span class="nav-text">Fire event before starting loading js for pagelets</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#Manage-dependencies-between-scripts"><span class="nav-number">6.2.</span> <span class="nav-text">Manage dependencies between scripts</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#Manage-pagelets-resources-in-a-unique-place"><span class="nav-number">6.3.</span> <span class="nav-text">Manage pagelets resources in a unique place</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Drawbacks-of-this-implementation"><span class="nav-number">7.</span> <span class="nav-text">Drawbacks of this implementation</span></a></li></ol></div>
            

          </div>
        </section>
      <!--/noindex-->
      

      

    </div>
  </aside>


        
      </div>
    </main>

    <footer id="footer" class="footer">
      <div class="footer-inner">
        <div class="copyright">&copy; <span itemprop="copyrightYear">2024</span>
  <span class="with-love">
    <i class="fa fa-user"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">Laird Lau</span>

  
</div>


  <div class="powered-by">Powered by <a class="theme-link" target="_blank" href="https://hexo.io">Hexo</a></div>



  <span class="post-meta-divider">|</span>



  <div class="theme-info">Theme &mdash; <a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next">NexT.Muse</a> v5.1.4</div>




        







        
      </div>
    </footer>

    
      <div class="back-to-top">
        <i class="fa fa-arrow-up"></i>
        
      </div>
    

    

  </div>

  

<script type="text/javascript">
  if (Object.prototype.toString.call(window.Promise) !== '[object Function]') {
    window.Promise = null;
  }
</script>









  












  
  
    <script type="text/javascript" src="/lib/jquery/index.js?v=2.1.3"></script>
  

  
  
    <script type="text/javascript" src="/lib/fastclick/lib/fastclick.min.js?v=1.0.6"></script>
  

  
  
    <script type="text/javascript" src="/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7"></script>
  

  
  
    <script type="text/javascript" src="/lib/velocity/velocity.min.js?v=1.2.1"></script>
  

  
  
    <script type="text/javascript" src="/lib/velocity/velocity.ui.min.js?v=1.2.1"></script>
  

  
  
    <script type="text/javascript" src="/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5"></script>
  


  


  <script type="text/javascript" src="/js/src/utils.js?v=5.1.4"></script>

  <script type="text/javascript" src="/js/src/motion.js?v=5.1.4"></script>



  
  

  
  <script type="text/javascript" src="/js/src/scrollspy.js?v=5.1.4"></script>
<script type="text/javascript" src="/js/src/post-details.js?v=5.1.4"></script>



  


  <script type="text/javascript" src="/js/src/bootstrap.js?v=5.1.4"></script>



  


  




	





  





  












  





  

  

  

  
  

  

  

  

</body>
</html>
