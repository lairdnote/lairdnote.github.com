<!DOCTYPE html>



  


<html class="theme-next muse use-motion" lang="en">
<head>
  <meta charset="UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
<meta name="theme-color" content="#222">









<meta http-equiv="Cache-Control" content="no-transform" />
<meta http-equiv="Cache-Control" content="no-siteapp" />
















  
  
  <link href="/lib/fancybox/source/jquery.fancybox.css?v=2.1.5" rel="stylesheet" type="text/css" />







<link href="/lib/font-awesome/css/font-awesome.min.css?v=4.6.2" rel="stylesheet" type="text/css" />

<link href="/css/main.css?v=5.1.4" rel="stylesheet" type="text/css" />


  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png?v=5.1.4">


  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png?v=5.1.4">


  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png?v=5.1.4">


  <link rel="mask-icon" href="/images/logo.svg?v=5.1.4" color="#222">





  <meta name="keywords" content="日志,系统设计," />










<meta name="description" content="部署 ELK 后，日志平台就搭建完成了，基本上可以投入使用，但是其配置并不完善，也并未提供实时监控和流量分析功能，本文将对 ELK 部署后的一些常见使用问题给出解决办法。">
<meta property="og:type" content="article">
<meta property="og:title" content="ELK集中式日志平台之三 —  进阶">
<meta property="og:url" content="https://blog.feedscoin.com/2017/12/elk-advanced">
<meta property="og:site_name" content="逐流小站">
<meta property="og:description" content="部署 ELK 后，日志平台就搭建完成了，基本上可以投入使用，但是其配置并不完善，也并未提供实时监控和流量分析功能，本文将对 ELK 部署后的一些常见使用问题给出解决办法。">
<meta property="og:locale" content="en_US">
<meta property="og:image" content="https://www.fanhaobai.com/2017/12/elk-advanced/993155ac-718b-4e4b-9d36-d9d73357b162.png">
<meta property="og:image" content="https://www.fanhaobai.com/2017/12/elk-advanced/0f9b0271-108b-47d4-acc2-6fde4e4f9ff7.png">
<meta property="og:image" content="https://www.fanhaobai.com/2017/12/elk-advanced/c618f544-7093-4530-9bda-b63ab58832ea.png">
<meta property="og:image" content="https://www.fanhaobai.com/2017/12/elk-advanced/575f23bd-f21a-4b53-a7f3-5581f9c25c01.png">
<meta property="og:image" content="https://www.fanhaobai.com/2017/12/elk-advanced/d82824ed-15eb-47c5-9ec6-925f2d3f7758.png">
<meta property="og:image" content="https://www.fanhaobai.com/2017/12/elk-advanced/f2c9321a-e7e4-11e7-80c1-9a214cf093ae.png">
<meta property="og:image" content="https://www.fanhaobai.com/2017/12/elk-advanced/3f97da38-e7e5-11e7-80c1-9a214cf093ae.png">
<meta property="og:image" content="https://www.fanhaobai.com/2017/12/elk-advanced/b27378ac-e7e8-11e7-80c1-9a214cf093ae.png">
<meta property="article:published_time" content="2017-12-22T15:12:00.000Z">
<meta property="article:modified_time" content="2024-01-15T07:29:51.000Z">
<meta property="article:author" content="Laird Lau">
<meta property="article:tag" content="日志">
<meta property="article:tag" content="系统设计">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://www.fanhaobai.com/2017/12/elk-advanced/993155ac-718b-4e4b-9d36-d9d73357b162.png">



<script type="text/javascript" id="hexo.configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '',
    scheme: 'Muse',
    version: '5.1.4',
    sidebar: {"position":"left","display":"post","offset":12,"b2t":false,"scrollpercent":false,"onmobile":false},
    fancybox: true,
    tabs: true,
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    duoshuo: {
      userId: '0',
      author: 'Author'
    },
    algolia: {
      applicationID: '',
      apiKey: '',
      indexName: '',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    }
  };
</script>



  <link rel="canonical" href="https://blog.feedscoin.com/2017/12/elk-advanced"/>





  <title>ELK集中式日志平台之三 —  进阶 | 逐流小站</title>
  





<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-MW47YH6RH0"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-MW47YH6RH0');
</script>





<meta name="generator" content="Hexo 7.0.0"></head>

<body itemscope itemtype="http://schema.org/WebPage" lang="en">

  
  
    
  

  <div class="container sidebar-position-left page-post-detail">
    <div class="headband"></div>

    <header id="header" class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-wrapper">
  <div class="site-meta ">
    

    <div class="custom-logo-site-title">
      <a href="/"  class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">逐流小站</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
      
        <h1 class="site-subtitle" itemprop="description">想回到那个能随便跳槽的年代</h1>
      
  </div>

  <div class="site-nav-toggle">
    <button>
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
    </button>
  </div>
</div>

<nav class="site-nav">
  

  
    <ul id="menu" class="menu">
      
        
        <li class="menu-item menu-item-home">
          <a href="/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-home"></i> <br />
            
            Home
          </a>
        </li>
      
        
        <li class="menu-item menu-item-tags">
          <a href="/tags/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-tags"></i> <br />
            
            Tags
          </a>
        </li>
      
        
        <li class="menu-item menu-item-categories">
          <a href="/categories/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-th"></i> <br />
            
            Categories
          </a>
        </li>
      
        
        <li class="menu-item menu-item-archives">
          <a href="/archives/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-archive"></i> <br />
            
            Archives
          </a>
        </li>
      
        
        <li class="menu-item menu-item-sitemap">
          <a href="/sitemap.xml" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-sitemap"></i> <br />
            
            Sitemap
          </a>
        </li>
      

      
        <li class="menu-item menu-item-search">
          
            <a href="javascript:;" class="popup-trigger">
          
            
              <i class="menu-item-icon fa fa-search fa-fw"></i> <br />
            
            Search
          </a>
        </li>
      
    </ul>
  

  
    <div class="site-search">
      
  
  <div class="algolia-popup popup search-popup">
    <div class="algolia-search">
      <div class="algolia-search-input-icon">
        <i class="fa fa-search"></i>
      </div>
      <div class="algolia-search-input" id="algolia-search-input"></div>
    </div>

    <div class="algolia-results">
      <div id="algolia-stats"></div>
      <div id="algolia-hits"></div>
      <div id="algolia-pagination" class="algolia-pagination"></div>
    </div>

    <span class="popup-btn-close">
      <i class="fa fa-times-circle"></i>
    </span>
  </div>




    </div>
  
</nav>



 </div>
    </header>

    <main id="main" class="main">
      <div class="main-inner">
        <div class="content-wrap">
          <div id="content" class="content">
            

  <div id="posts" class="posts-expand">
    

  

  
  
  

  <article class="post post-type-normal" itemscope itemtype="http://schema.org/Article">
  
  
  
  <div class="post-block">
    <link itemprop="mainEntityOfPage" href="https://blog.feedscoin.com/2017/12/elk-advanced">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="name" content="">
      <meta itemprop="description" content="">
      <meta itemprop="image" content="/images/avatar.gif">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="逐流小站">
    </span>

    
      <header class="post-header">

        
        
          <h2 class="post-title" itemprop="name headline">ELK集中式日志平台之三 —  进阶</h2>
        

        <div class="post-meta">
          <span class="post-time">
            
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              
                <span class="post-meta-item-text">Posted on</span>
              
              <time title="Post created" itemprop="dateCreated datePublished" datetime="2017-12-22T23:12:00+08:00">
                2017-12-22
              </time>
            

            

            
          </span>

          
            <span class="post-category" >
            
              <span class="post-meta-divider">|</span>
            
              <span class="post-meta-item-icon">
                <i class="fa fa-folder-o"></i>
              </span>
              
                <span class="post-meta-item-text">In</span>
              
              
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/" itemprop="url" rel="index">
                    <span itemprop="name">系统设计</span>
                  </a>
                </span>

                
                

              
            </span>
          

          
            
          

          
          

          

          

          

        </div>
      </header>
    

    
    
    
    <div class="post-body" itemprop="articleBody">
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4522670236044605"
     crossorigin="anonymous"></script>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-4522670236044605"
     data-ad-slot="5167312561"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
      
      

      

        <p>部署 <a target="_blank" rel="noopener" href="https://www.fanhaobai.com/2017/12/elk-install.html">ELK</a> 后，日志平台就搭建完成了，基本上可以投入使用，但是其配置并不完善，也并未提供实时监控和流量分析功能，本文将对 ELK 部署后的一些常见使用问题给出解决办法。<br><img src="//www.fanhaobai.com/2017/12/elk-advanced/993155ac-718b-4e4b-9d36-d9d73357b162.png" alt="预览图"><span id="more"></span></p>
<h2 id="Elasticsearch证书"><a href="#Elasticsearch证书" class="headerlink" title="Elasticsearch证书"></a>Elasticsearch证书</h2><p>为了获得 Elasticsearch 更好的体验，我们需要获得 <a target="_blank" rel="noopener" href="https://register.elastic.co/registration">Elastic</a> 的使用授权，安装颁发的永久 License 证书。</p>
<p>首先，前往 <a target="_blank" rel="noopener" href="https://register.elastic.co/registration">registration</a> 地址注册，稍后我们会收到 License 的下载地址：</p>
<p><img src="https://www.fanhaobai.com/2017/12/elk-advanced/0f9b0271-108b-47d4-acc2-6fde4e4f9ff7.png" alt="邮件"></p>
<p>接着，点击邮件中的 <a target="_blank" rel="noopener" href="http://license.elastic.co/registration/download/de804a8e-97e1-478b-a843-613aecac1a6e">地址</a> 下载 License 文件，并另存为<code>fan-haobai-dbc3f18c-f87e-40e4-9a1d-f496e58a591e-v5.json</code>：</p>
<p><img src="https://www.fanhaobai.com/2017/12/elk-advanced/c618f544-7093-4530-9bda-b63ab58832ea.png" alt="License文件"></p>
<p>然后，通过 Elasticsearch 的 API 更新 License：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">文件名前有@符号</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -XPOST http://127.0.0.1:9200/_xpack/license/start_basic?acknowledge=<span class="literal">true</span> -H <span class="string">&quot;Content-Type: application/json&quot;</span> -d @fan-haobai-dbc3f18c-f87e-40e4-9a1d-f496e58a591e-v5.json</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">返回如下信息则成功</span></span><br><span class="line">&#123;&quot;acknowledged&quot;:true,&quot;basic_was_started&quot;:true&#125;</span><br></pre></td></tr></table></figure>

<p>通过 <a target="_blank" rel="noopener" href="http://elk.fanhaobai.com/app/kibana#/management/elasticsearch/license_management">Kibana</a> 查看新的证书信息：</p>
<p><img src="https://www.fanhaobai.com/2017/12/elk-advanced/575f23bd-f21a-4b53-a7f3-5581f9c25c01.png" alt="证书信息"></p>
<h2 id="Logstash管道进阶"><a href="#Logstash管道进阶" class="headerlink" title="Logstash管道进阶"></a>Logstash管道进阶</h2><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/input-plugins.html">Input</a></h3><p>Input 插件指定了 Logstash 事件的输入源，已经支持 <a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-beats.html">beats</a>、<a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-kafka.html">kafka</a>、<a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-redis.html">redis</a> 等源的输入。</p>
<p>例如，配置 Beats 源为输入，且端口为 5044：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    beats &#123; port =&gt; 5044 &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h3><p>Filter 插件主要功能是数据过滤和格式化，通过简洁的表达式就可以完成数据的处理。</p>
<p>以下这些配置信息，为插件共有配置：</p>
<table>
<thead>
<tr>
<th>配置项</th>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>add_field</td>
<td>hash</td>
<td>添加字段</td>
</tr>
<tr>
<td>add_tag</td>
<td>array</td>
<td>添加标签</td>
</tr>
<tr>
<td>remove_field</td>
<td>array</td>
<td>删除字段</td>
</tr>
<tr>
<td>remove_tag</td>
<td>array</td>
<td>删除标签</td>
</tr>
</tbody></table>
<h4 id="Drop"><a href="#Drop" class="headerlink" title="Drop"></a>Drop</h4><p><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-drop.html">Drop</a> 插件用来过滤掉无价值的数据，例如过滤掉静态文件日志信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [url] =~ <span class="string">&quot;\.(jpg|jpeg|gif|png|bmp|swf|fla|flv|mp3|ico|js|css|woff)&quot;</span> &#123;</span><br><span class="line">    drop &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h4><p>我们可以用 <a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-date.html">Date</a> 插件来格式化时间字段。</p>
<p>例如，将 time 字段值格式化为<code>dd/MMM/YYYY:H:m:s Z</code>形式：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> &#123; match =&gt; [ <span class="string">&quot;[time]&quot;</span>, <span class="string">&quot;dd/MMM/YYYY:H:m:s Z&quot;</span> ] &#125;</span><br></pre></td></tr></table></figure>

<h4 id="Mutate"><a href="#Mutate" class="headerlink" title="Mutate"></a>Mutate</h4><p><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html">Mutate</a> 插件用来对字段进行 <a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html#plugins-filters-mutate-rename">rename</a>、<a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html#plugins-filters-mutate-replace">replace</a> 、<a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html#plugins-filters-mutate-merge">merge</a> 以及字段值 <a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html#plugins-filters-mutate-convert">convert</a>、<a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html#plugins-filters-mutate-split">split</a>、<a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html#plugins-filters-mutate-join">join</a> 操作。</p>
<p>例如，将字段<code>@timestamp</code>重命名（rename 或 replace）为 read_timestamp：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mutate &#123; rename =&gt; &#123; <span class="string">&quot;@timestamp&quot;</span> =&gt; <span class="string">&quot;read_timestamp&quot;</span> &#125; &#125;</span><br></pre></td></tr></table></figure>

<p>以下是对字段值的操作，使用频率较高。</p>
<ul>
<li>字段值类型转换（convert）</li>
</ul>
<p>例如，将 response_code 字段值转换为整型：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mutate &#123; convert =&gt; &#123; <span class="string">&quot;fieldname&quot;</span> =&gt; <span class="string">&quot;integer&quot;</span> &#125; &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>字符串分割为数组（split）</li>
</ul>
<p>例如，将经纬度坐标用数组表示：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mutate &#123; <span class="built_in">split</span> =&gt; &#123; <span class="string">&quot;location&quot;</span> =&gt; <span class="string">&quot;,&quot;</span> &#125; &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>数组合并为字符串（join）</li>
</ul>
<p>例如，将经纬度坐标合并：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mutate &#123; <span class="built_in">join</span> =&gt; &#123; <span class="string">&quot;location&quot;</span> =&gt; <span class="string">&quot;,&quot;</span> &#125; &#125;</span><br></pre></td></tr></table></figure>

<h4 id="Kv"><a href="#Kv" class="headerlink" title="Kv"></a>Kv</h4><p><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-kv.html">Kv</a> 插件能够对 key&#x3D;value 格式的字符进行格式化或过滤处理，这里只对 field_split 项配置进行说明，更多配置见 <a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-kv.html#plugins-filters-kv-options">Kv Filter Configuration Options</a>。</p>
<p>例如，获取形如<code>?name=cat&amp;type=2</code>GET 请求的参数：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kv &#123; field_split =&gt; <span class="string">&quot;&amp;?&quot;</span> &#125;</span><br></pre></td></tr></table></figure>

<p>处理后，将会获取到以下 2 个参数：</p>
<ul>
<li><code>name: cat</code></li>
<li><code>type: 2</code></li>
</ul>
<h4 id="Json"><a href="#Json" class="headerlink" title="Json"></a>Json</h4><p><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-json.html">Json</a> 插件当然是用来解析 Json 字符串，而 <a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-json_encode.html">Json_encode</a> 插件是对字段编码为 Json 字符串。例如，Nginx 日志为 Json 格式，则：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json &#123; <span class="built_in">source</span> =&gt; <span class="string">&quot;message&quot;</span> &#125;</span><br></pre></td></tr></table></figure>

<h4 id="Grok"><a href="#Grok" class="headerlink" title="Grok"></a>Grok</h4><p><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html">Grok</a> 插件可以根据指定的表达式 <a href="#">结构化</a> 文本数据，表达式需形如<code>%&#123;SYNTAX:SEMANTIC&#125;</code>格式，SYNTAX 指定字段值类型，可以为 IP、WORD、DATA、NUMBER 等。</p>
<p>例如，形如<code>55.3.244.1 GET /index.html 15824 0.043</code>的请求日志，则对应的表达式应为<code>%&#123;IP:client&#125; %&#123;WORD:method&#125; %&#123;WORD:request&#125; %&#123;NUMBER:bytes&#125; %&#123;NUMBER:duration&#125;</code>，配置如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grok &#123;</span><br><span class="line">    match =&gt; &#123; <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;%&#123;IP:client&#125; %&#123;WORD:method&#125; %&#123;WORD:request&#125; %&#123;NUMBER:bytes&#125; %&#123;NUMBER:duration&#125;&quot;</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>经过 Grok 过滤后，输出为：</p>
<ul>
<li><code>client: 55.3.244.1</code></li>
<li><code>method: GET</code></li>
<li><code>request: /index.html</code></li>
<li><code>bytes: 15824</code></li>
<li><code>duration: 0.043</code></li>
</ul>
<p>我们可以使用 <a target="_blank" rel="noopener" href="http://grokdebug.herokuapp.com/">Grok Debug</a> 在线调试 Grok 表达式，常用 Nginx、MySQL、Redis 日志的 Grok 表达式见 <a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/logstash-config-for-filebeat-modules.html">Configuration Examples</a> 部分。</p>
<blockquote>
<p><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-useragent.html">useragent</a> 插件用来解析用户客户端信息，<a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-geoip.html">geoip</a> 插件可以根据 IP 地址解析出用户所在的地址位置，配置较简单，这里不做说明。</p>
</blockquote>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Output 插件配置 Logstash 输出对象，可以为 <a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html">elasticsearch</a>、<a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-outputs-email.html">email</a>、<a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/logstash/current/plugins-outputs-file.html">file</a> 等介质。</p>
<p>例如，配置过滤后存储在 Elasticsearch 中：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts =&gt; <span class="string">&quot;localhost:9200&quot;</span></span><br><span class="line">        manage_template =&gt; <span class="literal">false</span></span><br><span class="line">        index =&gt; <span class="string">&quot;%&#123;[@metadata][type]&#125;-%&#123;+YYYY.MM&#125;&quot;</span></span><br><span class="line">        document_type =&gt; <span class="string">&quot;%&#123;[fields][env]&#125;&quot;</span></span><br><span class="line">        template_name =&gt; <span class="string">&quot;logstash&quot;</span></span><br><span class="line">        user =&gt; <span class="string">&quot;elastic&quot;</span></span><br><span class="line">        password =&gt; <span class="string">&quot;changeme&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当然，Output 插件不只是可以将过滤数据输出到一种介质，还可以同时指定多种介质。 </p>
<h3 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h3><p>实现基于 Nginx 日志进行过滤处理，并且通过 useragent 和 geoip 插件获取用户客户端和地理位置信息。详细配置如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    beats &#123; port =&gt; 5044 &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">    <span class="keyword">if</span> [fileset][module] == <span class="string">&quot;nginx&quot;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> [fileset][name] == <span class="string">&quot;access&quot;</span> &#123;</span><br><span class="line">            grok &#123;</span><br><span class="line">                match =&gt; &#123; <span class="string">&quot;message&quot;</span> =&gt; [<span class="string">&quot;%&#123;IPORHOST:[@metadata][remote_ip]&#125; - %&#123;DATA:[user_name]&#125; \[%&#123;HTTPDATE:[time]&#125;\] \&quot;%&#123;WORD:[method]&#125; %&#123;DATA:[url]&#125; HTTP/%&#123;NUMBER:[http_version]&#125;\&quot; %&#123;NUMBER:[response_code]&#125; %&#123;NUMBER:[body_sent][bytes]&#125; \&quot;%&#123;DATA:[referrer]&#125;\&quot; \&quot;%&#123;DATA:[@metadata][agent]&#125;\&quot;&quot;</span>] &#125;</span><br><span class="line">                remove_field =&gt; <span class="string">&quot;message&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            grok &#123;</span><br><span class="line">                match =&gt; &#123; <span class="string">&quot;referrer&quot;</span> =&gt; <span class="string">&quot;%&#123;URIPROTO&#125;://%&#123;URIHOST:referrer_domain&#125;&quot;</span> &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> [url] =~ <span class="string">&quot;\.(jpg|jpeg|gif|png|bmp|swf|fla|flv|mp3|ico|js|css|woff)&quot;</span> &#123;</span><br><span class="line">                drop &#123;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">            mutate &#123; add_field =&gt; &#123; <span class="string">&quot;read_timestamp&quot;</span> =&gt; <span class="string">&quot;%&#123;@timestamp&#125;&quot;</span> &#125; &#125;</span><br><span class="line">            <span class="built_in">date</span> &#123; match =&gt; [ <span class="string">&quot;[time]&quot;</span>, <span class="string">&quot;dd/MMM/YYYY:H:m:s Z&quot;</span> ] &#125;</span><br><span class="line">            useragent &#123;</span><br><span class="line">                <span class="built_in">source</span> =&gt; <span class="string">&quot;[@metadata][agent]&quot;</span></span><br><span class="line">                target =&gt; <span class="string">&quot;useragent&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            geoip &#123;</span><br><span class="line">                <span class="built_in">source</span> =&gt; <span class="string">&quot;[@metadata][remote_ip]&quot;</span></span><br><span class="line">                target =&gt; <span class="string">&quot;geoip&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> [fileset][name] == <span class="string">&quot;error&quot;</span> &#123;</span><br><span class="line">            grok &#123;</span><br><span class="line">                match =&gt; &#123; <span class="string">&quot;message&quot;</span> =&gt; [<span class="string">&quot;%&#123;DATA:[time]&#125; \[%&#123;LOGLEVEL:[level]&#125;\] %&#123;POSINT:[pid]&#125;#%&#123;NUMBER:[tid]&#125;: %&#123;GREEDYDATA:[error_message]&#125;(?:, client: %&#123;IPORHOST:[ip]&#125;)(?:, server: %&#123;IPORHOST:[server]&#125;?)(?:, request: \&quot;%&#123;WORD:[method]&#125; %&#123;DATA:[url]&#125; HTTP/%&#123;NUMBER:[http_version]&#125;\&quot;)?(?:, upstream: %&#123;WORD:[upstream]&#125;)?(?:, host: %&#123;QS:[request_host]&#125;)?(?:, referrer: \&quot;%&#123;URI:[referrer]&#125;\&quot;)?&quot;</span>] &#125;</span><br><span class="line">                remove_field =&gt; <span class="string">&quot;message&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">date</span> &#123; match =&gt; [ <span class="string">&quot;[time]&quot;</span>, <span class="string">&quot;YYYY/MM/dd H:m:s&quot;</span> ] &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts =&gt; <span class="string">&quot;localhost:9200&quot;</span></span><br><span class="line">        manage_template =&gt; <span class="literal">false</span></span><br><span class="line">        index =&gt; <span class="string">&quot;%&#123;[@metadata][type]&#125;-%&#123;+YYYY.MM&#125;&quot;</span></span><br><span class="line">        document_type =&gt; <span class="string">&quot;%&#123;[fields][env]&#125;&quot;</span></span><br><span class="line">        template_name =&gt; <span class="string">&quot;logstash&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>相对应的 Filebeat 的配置见 <a target="_blank" rel="noopener" href="https://www.fanhaobai.com/2017/12/elk-install.html#Filebeat">filebeat.yml</a> 部分。</p>
</blockquote>
<h2 id="索引模板"><a href="#索引模板" class="headerlink" title="索引模板"></a><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index-templates.html">索引模板</a></h2><p>Logstash 在推送数据至 Elasticsearch 时，默认会自动创建索引，但有时候我们需要定制化索引信息，Logstash 创建的索引就不符合我们的要求，此时就可以使用索引模板来解决。</p>
<p>创建一个名为<code>logstash</code>的索引模板，并指定该索引模板的匹配模式，作为 Logstash 推送日志时索引的模板。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">PUT _template/logstash</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;index_patterns&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;*access*&quot;</span><span class="punctuation">,</span> <span class="string">&quot;*error*&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;number_of_shards&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span>       </span><br><span class="line">            <span class="attr">&quot;number_of_replicas&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_default_&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;date&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;@version&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;keyword&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="attr">&quot;ignore_above&quot;</span><span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">                        <span class="punctuation">&#125;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>其中 <a href="#">index_patterns</a> 为匹配模式，表示含有 access 和 error 的索引才会使用该模板。<a href="#">mappings</a>  为字段映射规则，可以配置更多的字段映射规则，已配置字段根据索引模板规则映射，未配置字段则动态映射。</p>
<h2 id="指定数据存储类型"><a href="#指定数据存储类型" class="headerlink" title="指定数据存储类型"></a>指定数据存储类型</h2><p>Logstash 推送数据到 Elasticsearch 时，可以通过以下几种方式指定字段存储类型。</p>
<h3 id="grok"><a href="#grok" class="headerlink" title="grok"></a>grok</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grok &#123;</span><br><span class="line">    match =&gt; &#123; <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;%&#123;IP:client&#125; %&#123;WORD:method&#125; %&#123;WORD:request&#125; %&#123;NUMBER:bytes&#125; %&#123;NUMBER:duration&#125;&quot;</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中 IP、WORD、NUMBER 分别会映射为 Elasticsearch 的 IP、String、Number 类型。</p>
<h3 id="mutate"><a href="#mutate" class="headerlink" title="mutate"></a>mutate</h3><p>通过 Mutate 过滤插件的 convert 配置项，可以转换字段值类型。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mutate &#123; convert =&gt; &#123; <span class="string">&quot;fieldname&quot;</span> =&gt; <span class="string">&quot;integer&quot;</span> &#125; &#125;</span><br></pre></td></tr></table></figure>

<h3 id="索引模板-1"><a href="#索引模板-1" class="headerlink" title="索引模板"></a>索引模板</h3><p>若想要根据用户 IP 地址解析后的地理位置信息，得出访问用户的地理分布情况，就需要在 Elasticsearch 中将用户地理坐标存储为 <a href="#">geo_point</a> 类型，而 Logstash 并不能自动完成这个步骤，我们可以在索引模板中指定 location 字段的类型为 geo_point。</p>
<p>Elasticsearch 待存储的地理位置数据，格式如下：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;geoip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;location&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> </span><br><span class="line">    <span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span> <span class="number">40.722</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lon&quot;</span><span class="punctuation">:</span> <span class="number">-73.989</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>索引模板的 <a href="#%E7%B4%A2%E5%BC%95%E6%A8%A1%E6%9D%BF">Mappings</a> 部分，应设置为：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;_default_&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;geoip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;object&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;dynamic&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;location&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;geo_point&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="清理过期数据"><a href="#清理过期数据" class="headerlink" title="清理过期数据"></a>清理过期数据</h2><p>日志平台会产生大量的索引文件，这样不但会占用磁盘空间，而且还会导致检索性能降低，对于那些已经失效的日志文档，应该定期对其清理。</p>
<h3 id="设置索引过期时间"><a href="#设置索引过期时间" class="headerlink" title="设置索引过期时间"></a><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/elasticsearch/reference/2.4/mapping-ttl-field.html">设置索引过期时间</a></h3><p>最简单的办法就是给每个索引设定 TTLs（过期时间），在索引模板中定义失效时间为 7 天：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PUT /_template/logstash</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;template&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span>  </span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_default_&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;_ttl&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7d&quot;</span> <span class="punctuation">&#125;</span> <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>索引的 TTLs 特性已经从 Elasticsearch 5+ 版本移除，故不推荐使用该方式。</p>
</blockquote>
<h3 id="通过查询条件删除文档"><a href="#通过查询条件删除文档" class="headerlink" title="通过查询条件删除文档"></a><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">通过查询条件删除文档</a></h3><p>例如，日志中时间格式形如<code>&quot;2016-12-24T17:36:14.000Z</code>，则清理 7 天前日志的查询条件为：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;@timestamp&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;lt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;now-7d&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;date_time&quot;</span> <span class="punctuation">&#125;</span> <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>上述查询中，<code>@timestamp</code>指定查询字段，<code>format</code>指定时间的 <a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/mapping-date-format.html">格式</a> 为<code>date_time</code>，<code>now-7d</code>表示当前时间往前推移 7 天的时间。</p>
<p>配置定期清理过期日志的任务：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 * * * /usr/bin/curl -H&#x27;Content-Type:application/json&#x27; -d&#x27;query&#x27; -XPOST &quot;host/*/_delete_by_query?pretty&quot; &gt; path.log</span><br></pre></td></tr></table></figure>

<p>其中，<code>query</code>为待清理日志的查询条件，<code>path.log</code>为日志文件路径。</p>
<blockquote>
<p>该方式只是删除了过期的日志文档，并不会删除过期的索引信息，适用于对特定索引下的日志文档进行定期清理的场景。</p>
</blockquote>
<h3 id="自定义脚本"><a href="#自定义脚本" class="headerlink" title="自定义脚本"></a><a target="_blank" rel="noopener" href="https://github.com/fan-haobai/tools-shell/blob/master/elk/delete-index.sh">自定义脚本</a></h3><p>我们部署日志收集时，通常会以日、月的形式归档建立索引，所以清理过期日志，只需清理过期的索引。</p>
<p>这里通过<code>GET /_cat/indices</code>和<code>DELETE /index?pretty</code>这 2 个 API 完成过期索引的清理，清理脚本如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 待删除索引的正则表达式</span></span><br><span class="line">SEARCH_PREG=<span class="string">&quot;nginx-www-access-20[0-9][0-9](\.[0-9]&#123;2&#125;)+&quot;</span></span><br><span class="line"><span class="comment"># 保留索引的天数</span></span><br><span class="line">KEEP_DAYS=7</span><br><span class="line">URL=http://es.fanhaobai.com</span><br><span class="line">PORT=</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">date2stamp</span></span> () &#123;</span><br><span class="line">    <span class="built_in">date</span> --utc --<span class="built_in">date</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> +%s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$PORT</span> ]; <span class="keyword">then</span> elastic_url=<span class="string">&quot;<span class="variable">$URL</span>:<span class="variable">$&#123;PORT&#125;</span>&quot;</span>; <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">indices=`curl -u <span class="string">&quot;<span class="variable">$USER</span>:<span class="variable">$PASSWORD</span>&quot;</span> -s <span class="string">&quot;<span class="variable">$URL</span>/_cat/indices?v&quot;</span> | grep -E <span class="string">&quot;<span class="variable">$SEARCH_PREG</span>&quot;</span> | awk <span class="string">&#x27;&#123; print $3 &#125;&#x27;</span>`</span><br><span class="line">endDate=`date2stamp <span class="string">&quot;<span class="variable">$KEEP_DAYS</span> day ago&quot;</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="variable">$&#123;indices&#125;</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">date</span>=`<span class="built_in">echo</span> <span class="variable">$index</span> | sed <span class="string">&quot;s/.*\([0-9]\&#123;4\&#125;\([.\-][0-9]\&#123;2\&#125;\)*\).*/\1/g&quot;</span> | sed <span class="string">&#x27;s/[.\-]/-/g&#x27;</span>`</span><br><span class="line">  <span class="keyword">if</span> [ `<span class="built_in">echo</span> <span class="variable">$date</span> | grep -o \- | <span class="built_in">wc</span> -l` = 1 ]; <span class="keyword">then</span> <span class="built_in">date</span>=<span class="string">&quot;<span class="variable">$date</span>-01&quot;</span>; <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">  currentDate=`<span class="built_in">date</span> -u <span class="string">&quot;+%Y-%m-%d %T&quot;</span>`</span><br><span class="line">  logDate=`date2stamp <span class="variable">$date</span>`</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [ $((<span class="variable">$endDate</span>-<span class="variable">$logDate</span>)) -ge 0 ]; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;[<span class="variable">$&#123;currentDate&#125;</span>] - <span class="variable">$&#123;index&#125;</span> | DELETE&quot;</span>;</span><br><span class="line">      curl -u <span class="string">&quot;<span class="variable">$USER</span>:<span class="variable">$PASSWORD</span>&quot;</span> -XDELETE <span class="string">&quot;<span class="variable">$URL</span>/<span class="variable">$&#123;index&#125;</span>?pretty&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;[<span class="variable">$&#123;currentDate&#125;</span>] - <span class="variable">$&#123;index&#125;</span> | NO&quot;</span>;</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>配置定时任务：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 * * * /usr/local/elk/elasticsearch/bin/delete-index.sh &gt;&gt; /usr/local/elk/elasticsearch/logs/delete-index.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<blockquote>
<p>该方式通过自定义脚本方式，可以较灵活的配置所需清理的过期索引，使用起来简洁轻便，但若 Elasticsearch 采用集群方式部署，那么该方式就不是很灵活了。</p>
</blockquote>
<h3 id="Curator工具"><a href="#Curator工具" class="headerlink" title="Curator工具"></a><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/elasticsearch/client/curator/current/about.html">Curator工具</a></h3><p>当遇到清理过期索引比较复杂的场景时，就可以使用官方提供的管理工具 Curator。其不仅可以进行复杂场景的索引管理，还可以进行快照管理，而实现这一切，只需要配置 YAML 格式的配置文件。</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>这里使用 yum 安装，先配置 yum 源。在<code>/etc/yum.repos.d/</code>目录下创建名为<code>curator.repo</code>的文件，内容如下：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[curator-5]</span></span><br><span class="line"><span class="attr">name</span>=CentOS/RHEL <span class="number">6</span> repository for Elasticsearch Curator <span class="number">5</span>.x packages</span><br><span class="line"><span class="attr">baseurl</span>=https://packages.elastic.co/curator/<span class="number">5</span>/centos/<span class="number">6</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=https://packages.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>使用 yum 命令安装：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rpm --import https://packages.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum install -y elasticsearch-curator</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取所有索引</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curator_cli --host es.fanhaobai.com --port 80 show_indices --verbose</span></span><br><span class="line"></span><br><span class="line">.kibana     open   15.7KB       3   1   0 2017-12-15T06:15:07Z</span><br></pre></td></tr></table></figure>

<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><ul>
<li><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/elasticsearch/client/curator/current/configfile.html">主配置文件</a></li>
</ul>
<p>创建名为<code>/etc/curator/curator.yml</code>的配置文件，主要用来配置 Elasticsearch 服务的相关信息：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">client:</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">es.fanhaobai.com</span>         <span class="comment">#集群配置形如[&quot;10.0.0.1&quot;, &quot;10.0.0.2&quot;]</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">url_prefix:</span></span><br><span class="line">  <span class="attr">use_ssl:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">certificate:</span></span><br><span class="line">  <span class="attr">client_cert:</span></span><br><span class="line">  <span class="attr">client_key:</span></span><br><span class="line">  <span class="attr">ssl_no_validate:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">30</span></span><br><span class="line">  <span class="attr">master_only:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">loglevel:</span> <span class="string">INFO</span></span><br><span class="line">  <span class="attr">logfile:</span> <span class="string">/usr/local/elk/elasticsearch/logs/elasticsearch-curator.log</span></span><br><span class="line">  <span class="attr">logformat:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">blacklist:</span> [<span class="string">&#x27;elasticsearch&#x27;</span>, <span class="string">&#x27;urllib3&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>其中，需要配置 hosts、port、http_auth 这 3 个配置项。</p>
<ul>
<li><a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/elasticsearch/client/curator/current/actionfile.html">任务配置文件</a></li>
</ul>
<p>例如，待清理索引的格式形如<code>test-2017.11.16</code>，需清理 7 天过期的索引。创建名为<code>delete-index.yml</code>的 <a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/elasticsearch/client/curator/current/ex_delete_indices.html">配置</a> 文件，内容如下：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">actions:</span></span><br><span class="line">  <span class="attr">1:</span>                                  <span class="comment">#任务1</span></span><br><span class="line">   <span class="attr">action:</span> <span class="string">delete_indices</span>             <span class="comment">#任务动作</span></span><br><span class="line">   <span class="attr">description:</span> <span class="string">&quot;Delete nginx index&quot;</span>  <span class="comment">#日志描述</span></span><br><span class="line">   <span class="attr">options:</span></span><br><span class="line">     <span class="attr">ignore_empty_list:</span> <span class="literal">false</span></span><br><span class="line">     <span class="attr">disable_action:</span> <span class="literal">false</span></span><br><span class="line">   <span class="attr">filters:</span>                           <span class="comment">#管道</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">filtertype:</span> <span class="string">pattern</span>              <span class="comment">#模式过滤</span></span><br><span class="line">     <span class="attr">kind:</span> <span class="string">prefix</span>                     <span class="comment">#匹配索引前缀</span></span><br><span class="line">     <span class="attr">value:</span> <span class="string">test-</span>                     <span class="comment">#匹配值，索引前缀为test-</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">filtertype:</span> <span class="string">age</span>                  <span class="comment">#时间过滤</span></span><br><span class="line">     <span class="attr">source:</span> <span class="string">name</span>                     <span class="comment">#过滤形式</span></span><br><span class="line">     <span class="attr">direction:</span> <span class="string">older</span>                 <span class="comment">#往后推算</span></span><br><span class="line">     <span class="attr">timestring:</span> <span class="string">&#x27;%Y.%m.%d&#x27;</span>           <span class="comment">#时间格式，同索引时间格式</span></span><br><span class="line">     <span class="attr">unit:</span> <span class="string">days</span>                       <span class="comment">#时间单位</span></span><br><span class="line">     <span class="attr">unit_count:</span> <span class="number">7</span>                    <span class="comment">#时间间隔，7天内</span></span><br></pre></td></tr></table></figure>

<p>Curator 支持配置多个任务，其中 <a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/elasticsearch/client/curator/current/actions.html">action</a> 为任务动作，<a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/elasticsearch/client/curator/current/filters.html">filters</a> 为管道过滤器，<a target="_blank" rel="noopener" href="https://www.elastic.co/guide/en/elasticsearch/client/curator/current/filtertype.html">filtertype</a> 为过滤器的过滤类型，支持多种过滤类型。</p>
<p>测试删除过期索引：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除前</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curator_cli --config /etc/curator/curator.yml show_indices --verbose | grep <span class="built_in">test</span>-</span></span><br><span class="line">test-2017.11.16      open   162.0B       0   3   0 2017-12-17T06:10:04Z</span><br><span class="line">test-2017.12.16      open   486.0B       0   3   0 2017-12-17T05:58:07Z</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curator --config /etc/curator/curator.yml /etc/curator/delete-index.yml</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除过期索引后</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curator_cli --config /etc/curator/curator.yml show_indices --verbose | grep <span class="built_in">test</span>-</span></span><br><span class="line">test-2017.12.16      open   486.0B       0   3   0 2017-12-17T05:58:07Z</span><br></pre></td></tr></table></figure>

<p>配置每天执行任务：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 * * * /usr/bin/curator --config /etc/curator/curator.yml /etc/curator/delete-index.yml</span><br></pre></td></tr></table></figure>

<blockquote>
<p>该方式不但直接通过配置即可方便实现过期索引的清理，而且可以在复杂场景轻松地管理索引、快照等，故推荐该方式。</p>
</blockquote>
<h2 id="数据报表"><a href="#数据报表" class="headerlink" title="数据报表"></a>数据报表</h2><p>上述一切准备步骤做好后，我们就可以利用 Kibana 对大量的日志数据进行报表分析，进而实现应用监控和流量分析。</p>
<h3 id="创建索引模式"><a href="#创建索引模式" class="headerlink" title="创建索引模式"></a>创建索引模式</h3><p>选择 Kibana 的 ”Managemant  &gt;&gt; Kibana &gt;&gt; Index Patterns” 项 ，创建一个名为<code>nginx-www-access*</code>的索引模式，并设为默认索引，如图：</p>
<p><img src="//www.fanhaobai.com/2017/12/elk-advanced/d82824ed-15eb-47c5-9ec6-925f2d3f7758.png"></p>
<h3 id="创建数据图表"><a href="#创建数据图表" class="headerlink" title="创建数据图表"></a>创建数据图表</h3><p>选择 Kibana 的 ”Visualize” 项，创建一个数据图表，Kibana 已经支持了丰富的图标类型，这里选择 Line 类型图表制作一个用户访问量的图表。</p>
<p>图表的 Metrics（指标） 和 Buckets（桶）属性，Metrics 用来表示 PV 和 UV，而 Buckets 则是时间维度，UV 需要根据 location 去重后统计。</p>
<p>图表的 Metrics 部分，如下图：</p>
<p><img src="//www.fanhaobai.com/2017/12/elk-advanced/f2c9321a-e7e4-11e7-80c1-9a214cf093ae.png"></p>
<p>图表的 Buckets 部分，如下图：</p>
<p><img src="//www.fanhaobai.com/2017/12/elk-advanced/3f97da38-e7e5-11e7-80c1-9a214cf093ae.png"></p>
<p>最后，生成的用户访问量图表如文章起始所示。</p>
<h3 id="创建实时监控面板"><a href="#创建实时监控面板" class="headerlink" title="创建实时监控面板"></a>创建实时监控面板</h3><p>当我们创建了各种指标的数据图表后，就可以将这些数据图表组合成一个实时监控面板。选择 Kibana 的 ”Dashboard” 项，创建一个监控面板，并添加所需监控指标的数据图表，拖拽调整各图表到合适位置并保存，一个实时监控面板就呈现在眼前了。</p>
<p>下面是我针对主站 <a target="_blank" rel="noopener" href="https://www.fanhaobai.com/">Blog</a> 健康监控和流量分析做出的实时 <a target="_blank" rel="noopener" href="http://elk.fanhaobai.com/">数据报表</a> 展示，基本上满足了实时监控要求。</p>
<p><img src="//www.fanhaobai.com/2017/12/elk-advanced/b27378ac-e7e8-11e7-80c1-9a214cf093ae.png"></p>
<h2 id="Logstash出现OutOfMemory异常"><a href="#Logstash出现OutOfMemory异常" class="headerlink" title="Logstash出现OutOfMemory异常"></a>Logstash出现OutOfMemory异常</h2><p>当 Logstash 运行一段时间后，你可能会发现日志中出现大量的 <a href="#">OutOfMemory 错误，并且服务器 CPU 处于 100% 状态</a>。产生原因是因为 Logstash 堆栈溢出，进而要频繁进行 GC 操作导致。</p>
<p>尽管在 <a target="_blank" rel="noopener" href="https://www.fanhaobai.com/2017/12/elk-install.html#%E5%AE%89%E8%A3%85">安装</a> 过程中调整了 Logstash 内存大小，这个由于服务器硬件限制导致的问题还是没法根本解决，但是可以规避问题嘛。很简单，这种堆栈溢出只会长期运行出现，所以只需要定期重启 Logstash 即可。定时任务为：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 */12 * * * /sbin/service logstash restart</span><br></pre></td></tr></table></figure>

<p><strong>相关文章 <a href="#">»</a></strong></p>
<ul>
<li><a target="_blank" rel="noopener" href="https://www.fanhaobai.com/2017/12/elk.html">ELK集中式日志平台之一 — 平台架构</a> <span>（2017-12-16）</span></li>
<li><a target="_blank" rel="noopener" href="https://www.fanhaobai.com/2017/12/elk-install.html">ELK集中式日志平台之二 — 部署</a> <span>（2017-12-22）</span></li>
</ul>

      
    </div>
    
    
    

    


    

    

    <footer class="post-footer">
      
        <div class="post-tags">
          
            <a href="/tags/%E6%97%A5%E5%BF%97/" rel="tag"># 日志</a>
          
            <a href="/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/" rel="tag"># 系统设计</a>
          
        </div>
      

      
      
      

      
        <div class="post-nav">
          <div class="post-nav-next post-nav-item">
            
              <a href="/2017/12/elk-install" rel="next" title="ELK集中式日志平台之二 — 部署">
                <i class="fa fa-chevron-left"></i> ELK集中式日志平台之二 — 部署
              </a>
            
          </div>

          <span class="post-nav-divider"></span>

          <div class="post-nav-prev post-nav-item">
            
              <a href="/%E5%9F%BA%E4%BA%8E%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E7%9A%84%E7%94%B7%E5%A5%B3%E6%80%A7%E6%8B%A9%E5%81%B6%E8%A7%82%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-%E4%B8%8A" rel="prev" title="基于新浪微博的男女性择偶观数据分析(上)">
                基于新浪微博的男女性择偶观数据分析(上) <i class="fa fa-chevron-right"></i>
              </a>
            
          </div>
        </div>
      

      
      
    </footer>
  </div>
  
  
  
  </article>



    <div class="post-spread">
      
    </div>
  </div>


          </div>
          


          

  



        </div>
        
          
  
  <div class="sidebar-toggle">
    <div class="sidebar-toggle-line-wrap">
      <span class="sidebar-toggle-line sidebar-toggle-line-first"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-middle"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-last"></span>
    </div>
  </div>

  <aside id="sidebar" class="sidebar">
    
    <div class="sidebar-inner">

      

      
        <ul class="sidebar-nav motion-element">
          <li class="sidebar-nav-toc sidebar-nav-active" data-target="post-toc-wrap">
            Table of Contents
          </li>
          <li class="sidebar-nav-overview" data-target="site-overview-wrap">
            Overview
          </li>
        </ul>
      

      <section class="site-overview-wrap sidebar-panel">
        <div class="site-overview">
          <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
            
              <p class="site-author-name" itemprop="name"></p>
              <p class="site-description motion-element" itemprop="description"></p>
          </div>

          <nav class="site-state motion-element">

            
              <div class="site-state-item site-state-posts">
              
                <a href="/archives/%7C%7C%20archive">
              
                  <span class="site-state-item-count">1451</span>
                  <span class="site-state-item-name">posts</span>
                </a>
              </div>
            

            
              
              
              <div class="site-state-item site-state-categories">
                <a href="/categories/index.html">
                  <span class="site-state-item-count">71</span>
                  <span class="site-state-item-name">categories</span>
                </a>
              </div>
            

            
              
              
              <div class="site-state-item site-state-tags">
                <a href="/tags/index.html">
                  <span class="site-state-item-count">914</span>
                  <span class="site-state-item-name">tags</span>
                </a>
              </div>
            

          </nav>

          

          

          
          

          
          

          <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4522670236044605"
     crossorigin="anonymous"></script>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-4522670236044605"
     data-ad-slot="5358884258"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

        </div>
      </section>

      
      <!--noindex-->
        <section class="post-toc-wrap motion-element sidebar-panel sidebar-panel-active">
          <div class="post-toc">

            
              
            

            
              <div class="post-toc-content"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#Elasticsearch%E8%AF%81%E4%B9%A6"><span class="nav-number">1.</span> <span class="nav-text">Elasticsearch证书</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Logstash%E7%AE%A1%E9%81%93%E8%BF%9B%E9%98%B6"><span class="nav-number">2.</span> <span class="nav-text">Logstash管道进阶</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#Input"><span class="nav-number">2.1.</span> <span class="nav-text">Input</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#Filter"><span class="nav-number">2.2.</span> <span class="nav-text">Filter</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#Drop"><span class="nav-number">2.2.1.</span> <span class="nav-text">Drop</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#Date"><span class="nav-number">2.2.2.</span> <span class="nav-text">Date</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#Mutate"><span class="nav-number">2.2.3.</span> <span class="nav-text">Mutate</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#Kv"><span class="nav-number">2.2.4.</span> <span class="nav-text">Kv</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#Json"><span class="nav-number">2.2.5.</span> <span class="nav-text">Json</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#Grok"><span class="nav-number">2.2.6.</span> <span class="nav-text">Grok</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#Output"><span class="nav-number">2.3.</span> <span class="nav-text">Output</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B"><span class="nav-number">2.4.</span> <span class="nav-text">配置示例</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E7%B4%A2%E5%BC%95%E6%A8%A1%E6%9D%BF"><span class="nav-number">3.</span> <span class="nav-text">索引模板</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%8C%87%E5%AE%9A%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%B1%BB%E5%9E%8B"><span class="nav-number">4.</span> <span class="nav-text">指定数据存储类型</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#grok"><span class="nav-number">4.1.</span> <span class="nav-text">grok</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#mutate"><span class="nav-number">4.2.</span> <span class="nav-text">mutate</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E7%B4%A2%E5%BC%95%E6%A8%A1%E6%9D%BF-1"><span class="nav-number">4.3.</span> <span class="nav-text">索引模板</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%B8%85%E7%90%86%E8%BF%87%E6%9C%9F%E6%95%B0%E6%8D%AE"><span class="nav-number">5.</span> <span class="nav-text">清理过期数据</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E8%AE%BE%E7%BD%AE%E7%B4%A2%E5%BC%95%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4"><span class="nav-number">5.1.</span> <span class="nav-text">设置索引过期时间</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E9%80%9A%E8%BF%87%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6%E5%88%A0%E9%99%A4%E6%96%87%E6%A1%A3"><span class="nav-number">5.2.</span> <span class="nav-text">通过查询条件删除文档</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%84%9A%E6%9C%AC"><span class="nav-number">5.3.</span> <span class="nav-text">自定义脚本</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#Curator%E5%B7%A5%E5%85%B7"><span class="nav-number">5.4.</span> <span class="nav-text">Curator工具</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%AE%89%E8%A3%85"><span class="nav-number">5.4.1.</span> <span class="nav-text">安装</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E9%85%8D%E7%BD%AE"><span class="nav-number">5.4.2.</span> <span class="nav-text">配置</span></a></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%95%B0%E6%8D%AE%E6%8A%A5%E8%A1%A8"><span class="nav-number">6.</span> <span class="nav-text">数据报表</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E6%A8%A1%E5%BC%8F"><span class="nav-number">6.1.</span> <span class="nav-text">创建索引模式</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8"><span class="nav-number">6.2.</span> <span class="nav-text">创建数据图表</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%88%9B%E5%BB%BA%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7%E9%9D%A2%E6%9D%BF"><span class="nav-number">6.3.</span> <span class="nav-text">创建实时监控面板</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Logstash%E5%87%BA%E7%8E%B0OutOfMemory%E5%BC%82%E5%B8%B8"><span class="nav-number">7.</span> <span class="nav-text">Logstash出现OutOfMemory异常</span></a></li></ol></div>
            

          </div>
        </section>
      <!--/noindex-->
      

      

    </div>
  </aside>


        
      </div>
    </main>

    <footer id="footer" class="footer">
      <div class="footer-inner">
        <div class="copyright">&copy; <span itemprop="copyrightYear">2024</span>
  <span class="with-love">
    <i class="fa fa-user"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">Laird Lau</span>

  
</div>


  <div class="powered-by">Powered by <a class="theme-link" target="_blank" href="https://hexo.io">Hexo</a></div>



  <span class="post-meta-divider">|</span>



  <div class="theme-info">Theme &mdash; <a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next">NexT.Muse</a> v5.1.4</div>




        







        
      </div>
    </footer>

    
      <div class="back-to-top">
        <i class="fa fa-arrow-up"></i>
        
      </div>
    

    

  </div>

  

<script type="text/javascript">
  if (Object.prototype.toString.call(window.Promise) !== '[object Function]') {
    window.Promise = null;
  }
</script>









  












  
  
    <script type="text/javascript" src="/lib/jquery/index.js?v=2.1.3"></script>
  

  
  
    <script type="text/javascript" src="/lib/fastclick/lib/fastclick.min.js?v=1.0.6"></script>
  

  
  
    <script type="text/javascript" src="/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7"></script>
  

  
  
    <script type="text/javascript" src="/lib/velocity/velocity.min.js?v=1.2.1"></script>
  

  
  
    <script type="text/javascript" src="/lib/velocity/velocity.ui.min.js?v=1.2.1"></script>
  

  
  
    <script type="text/javascript" src="/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5"></script>
  


  


  <script type="text/javascript" src="/js/src/utils.js?v=5.1.4"></script>

  <script type="text/javascript" src="/js/src/motion.js?v=5.1.4"></script>



  
  

  
  <script type="text/javascript" src="/js/src/scrollspy.js?v=5.1.4"></script>
<script type="text/javascript" src="/js/src/post-details.js?v=5.1.4"></script>



  


  <script type="text/javascript" src="/js/src/bootstrap.js?v=5.1.4"></script>



  


  




	





  





  












  

  <script type="text/javascript">
    // Popup Window;
    var isfetched = false;
    var isXml = true;
    // Search DB path;
    var search_path = "search.xml";
    if (search_path.length === 0) {
      search_path = "search.xml";
    } else if (/json$/i.test(search_path)) {
      isXml = false;
    }
    var path = "/" + search_path;
    // monitor main search box;

    var onPopupClose = function (e) {
      $('.popup').hide();
      $('#local-search-input').val('');
      $('.search-result-list').remove();
      $('#no-result').remove();
      $(".local-search-pop-overlay").remove();
      $('body').css('overflow', '');
    }

    function proceedsearch() {
      $("body")
        .append('<div class="search-popup-overlay local-search-pop-overlay"></div>')
        .css('overflow', 'hidden');
      $('.search-popup-overlay').click(onPopupClose);
      $('.popup').toggle();
      var $localSearchInput = $('#local-search-input');
      $localSearchInput.attr("autocapitalize", "none");
      $localSearchInput.attr("autocorrect", "off");
      $localSearchInput.focus();
    }

    // search function;
    var searchFunc = function(path, search_id, content_id) {
      'use strict';

      // start loading animation
      $("body")
        .append('<div class="search-popup-overlay local-search-pop-overlay">' +
          '<div id="search-loading-icon">' +
          '<i class="fa fa-spinner fa-pulse fa-5x fa-fw"></i>' +
          '</div>' +
          '</div>')
        .css('overflow', 'hidden');
      $("#search-loading-icon").css('margin', '20% auto 0 auto').css('text-align', 'center');

      $.ajax({
        url: path,
        dataType: isXml ? "xml" : "json",
        async: true,
        success: function(res) {
          // get the contents from search data
          isfetched = true;
          $('.popup').detach().appendTo('.header-inner');
          var datas = isXml ? $("entry", res).map(function() {
            return {
              title: $("title", this).text(),
              content: $("content",this).text(),
              url: $("url" , this).text()
            };
          }).get() : res;
          var input = document.getElementById(search_id);
          var resultContent = document.getElementById(content_id);
          var inputEventFunction = function() {
            var searchText = input.value.trim().toLowerCase();
            var keywords = searchText.split(/[\s\-]+/);
            if (keywords.length > 1) {
              keywords.push(searchText);
            }
            var resultItems = [];
            if (searchText.length > 0) {
              // perform local searching
              datas.forEach(function(data) {
                var isMatch = false;
                var hitCount = 0;
                var searchTextCount = 0;
                var title = data.title.trim();
                var titleInLowerCase = title.toLowerCase();
                var content = data.content.trim().replace(/<[^>]+>/g,"");
                var contentInLowerCase = content.toLowerCase();
                var articleUrl = decodeURIComponent(data.url);
                var indexOfTitle = [];
                var indexOfContent = [];
                // only match articles with not empty titles
                if(title != '') {
                  keywords.forEach(function(keyword) {
                    function getIndexByWord(word, text, caseSensitive) {
                      var wordLen = word.length;
                      if (wordLen === 0) {
                        return [];
                      }
                      var startPosition = 0, position = [], index = [];
                      if (!caseSensitive) {
                        text = text.toLowerCase();
                        word = word.toLowerCase();
                      }
                      while ((position = text.indexOf(word, startPosition)) > -1) {
                        index.push({position: position, word: word});
                        startPosition = position + wordLen;
                      }
                      return index;
                    }

                    indexOfTitle = indexOfTitle.concat(getIndexByWord(keyword, titleInLowerCase, false));
                    indexOfContent = indexOfContent.concat(getIndexByWord(keyword, contentInLowerCase, false));
                  });
                  if (indexOfTitle.length > 0 || indexOfContent.length > 0) {
                    isMatch = true;
                    hitCount = indexOfTitle.length + indexOfContent.length;
                  }
                }

                // show search results

                if (isMatch) {
                  // sort index by position of keyword

                  [indexOfTitle, indexOfContent].forEach(function (index) {
                    index.sort(function (itemLeft, itemRight) {
                      if (itemRight.position !== itemLeft.position) {
                        return itemRight.position - itemLeft.position;
                      } else {
                        return itemLeft.word.length - itemRight.word.length;
                      }
                    });
                  });

                  // merge hits into slices

                  function mergeIntoSlice(text, start, end, index) {
                    var item = index[index.length - 1];
                    var position = item.position;
                    var word = item.word;
                    var hits = [];
                    var searchTextCountInSlice = 0;
                    while (position + word.length <= end && index.length != 0) {
                      if (word === searchText) {
                        searchTextCountInSlice++;
                      }
                      hits.push({position: position, length: word.length});
                      var wordEnd = position + word.length;

                      // move to next position of hit

                      index.pop();
                      while (index.length != 0) {
                        item = index[index.length - 1];
                        position = item.position;
                        word = item.word;
                        if (wordEnd > position) {
                          index.pop();
                        } else {
                          break;
                        }
                      }
                    }
                    searchTextCount += searchTextCountInSlice;
                    return {
                      hits: hits,
                      start: start,
                      end: end,
                      searchTextCount: searchTextCountInSlice
                    };
                  }

                  var slicesOfTitle = [];
                  if (indexOfTitle.length != 0) {
                    slicesOfTitle.push(mergeIntoSlice(title, 0, title.length, indexOfTitle));
                  }

                  var slicesOfContent = [];
                  while (indexOfContent.length != 0) {
                    var item = indexOfContent[indexOfContent.length - 1];
                    var position = item.position;
                    var word = item.word;
                    // cut out 100 characters
                    var start = position - 20;
                    var end = position + 80;
                    if(start < 0){
                      start = 0;
                    }
                    if (end < position + word.length) {
                      end = position + word.length;
                    }
                    if(end > content.length){
                      end = content.length;
                    }
                    slicesOfContent.push(mergeIntoSlice(content, start, end, indexOfContent));
                  }

                  // sort slices in content by search text's count and hits' count

                  slicesOfContent.sort(function (sliceLeft, sliceRight) {
                    if (sliceLeft.searchTextCount !== sliceRight.searchTextCount) {
                      return sliceRight.searchTextCount - sliceLeft.searchTextCount;
                    } else if (sliceLeft.hits.length !== sliceRight.hits.length) {
                      return sliceRight.hits.length - sliceLeft.hits.length;
                    } else {
                      return sliceLeft.start - sliceRight.start;
                    }
                  });

                  // select top N slices in content

                  var upperBound = parseInt('1');
                  if (upperBound >= 0) {
                    slicesOfContent = slicesOfContent.slice(0, upperBound);
                  }

                  // highlight title and content

                  function highlightKeyword(text, slice) {
                    var result = '';
                    var prevEnd = slice.start;
                    slice.hits.forEach(function (hit) {
                      result += text.substring(prevEnd, hit.position);
                      var end = hit.position + hit.length;
                      result += '<b class="search-keyword">' + text.substring(hit.position, end) + '</b>';
                      prevEnd = end;
                    });
                    result += text.substring(prevEnd, slice.end);
                    return result;
                  }

                  var resultItem = '';

                  if (slicesOfTitle.length != 0) {
                    resultItem += "<li><a href='" + articleUrl + "' class='search-result-title'>" + highlightKeyword(title, slicesOfTitle[0]) + "</a>";
                  } else {
                    resultItem += "<li><a href='" + articleUrl + "' class='search-result-title'>" + title + "</a>";
                  }

                  slicesOfContent.forEach(function (slice) {
                    resultItem += "<a href='" + articleUrl + "'>" +
                      "<p class=\"search-result\">" + highlightKeyword(content, slice) +
                      "...</p>" + "</a>";
                  });

                  resultItem += "</li>";
                  resultItems.push({
                    item: resultItem,
                    searchTextCount: searchTextCount,
                    hitCount: hitCount,
                    id: resultItems.length
                  });
                }
              })
            };
            if (keywords.length === 1 && keywords[0] === "") {
              resultContent.innerHTML = '<div id="no-result"><i class="fa fa-search fa-5x" /></div>'
            } else if (resultItems.length === 0) {
              resultContent.innerHTML = '<div id="no-result"><i class="fa fa-frown-o fa-5x" /></div>'
            } else {
              resultItems.sort(function (resultLeft, resultRight) {
                if (resultLeft.searchTextCount !== resultRight.searchTextCount) {
                  return resultRight.searchTextCount - resultLeft.searchTextCount;
                } else if (resultLeft.hitCount !== resultRight.hitCount) {
                  return resultRight.hitCount - resultLeft.hitCount;
                } else {
                  return resultRight.id - resultLeft.id;
                }
              });
              var searchResultList = '<ul class=\"search-result-list\">';
              resultItems.forEach(function (result) {
                searchResultList += result.item;
              })
              searchResultList += "</ul>";
              resultContent.innerHTML = searchResultList;
            }
          }

          if ('auto' === 'auto') {
            input.addEventListener('input', inputEventFunction);
          } else {
            $('.search-icon').click(inputEventFunction);
            input.addEventListener('keypress', function (event) {
              if (event.keyCode === 13) {
                inputEventFunction();
              }
            });
          }

          // remove loading animation
          $(".local-search-pop-overlay").remove();
          $('body').css('overflow', '');

          proceedsearch();
        }
      });
    }

    // handle and trigger popup window;
    $('.popup-trigger').click(function(e) {
      e.stopPropagation();
      if (isfetched === false) {
        searchFunc(path, 'local-search-input', 'local-search-result');
      } else {
        proceedsearch();
      };
    });

    $('.popup-btn-close').click(onPopupClose);
    $('.popup').click(function(e){
      e.stopPropagation();
    });
    $(document).on('keyup', function (event) {
      var shouldDismissSearchPopup = event.which === 27 &&
        $('.search-popup').is(':visible');
      if (shouldDismissSearchPopup) {
        onPopupClose();
      }
    });
  </script>




  
  
  
  <link rel="stylesheet" href="/lib/algolia-instant-search/instantsearch.min.css">

  
  
  <script src="/lib/algolia-instant-search/instantsearch.min.js"></script>
  

  <script src="/js/src/algolia-search.js?v=5.1.4"></script>



  

  

  

  
  

  

  

  

</body>
</html>
