<!DOCTYPE html>



  


<html class="theme-next muse use-motion" lang="en">
<head>
  <meta charset="UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
<meta name="theme-color" content="#222">









<meta http-equiv="Cache-Control" content="no-transform" />
<meta http-equiv="Cache-Control" content="no-siteapp" />
















  
  
  <link href="/lib/fancybox/source/jquery.fancybox.css?v=2.1.5" rel="stylesheet" type="text/css" />







<link href="/lib/font-awesome/css/font-awesome.min.css?v=4.6.2" rel="stylesheet" type="text/css" />

<link href="/css/main.css?v=5.1.4" rel="stylesheet" type="text/css" />


  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png?v=5.1.4">


  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png?v=5.1.4">


  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png?v=5.1.4">


  <link rel="mask-icon" href="/images/logo.svg?v=5.1.4" color="#222">





  <meta name="keywords" content="performance," />










<meta name="description" content="A quick look at the Paint Timing API to get metrics about render events on our pages.">
<meta property="og:type" content="article">
<meta property="og:title" content="PerformanceObserver and Paint Timing API">
<meta property="og:url" content="https://blog.feedscoin.com/paint-timing-api">
<meta property="og:site_name" content="逐流小站">
<meta property="og:description" content="A quick look at the Paint Timing API to get metrics about render events on our pages.">
<meta property="og:locale" content="en_US">
<meta property="article:published_time" content="2017-06-17T01:15:00.000Z">
<meta property="article:modified_time" content="2024-01-15T07:11:20.000Z">
<meta property="article:author" content="Laird Lau">
<meta property="article:tag" content="performance">
<meta name="twitter:card" content="summary">



<script type="text/javascript" id="hexo.configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '',
    scheme: 'Muse',
    version: '5.1.4',
    sidebar: {"position":"left","display":"post","offset":12,"b2t":false,"scrollpercent":false,"onmobile":false},
    fancybox: true,
    tabs: true,
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    duoshuo: {
      userId: '0',
      author: 'Author'
    },
    algolia: {
      applicationID: '',
      apiKey: '',
      indexName: '',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    }
  };
</script>



  <link rel="canonical" href="https://blog.feedscoin.com/paint-timing-api"/>





  <title>PerformanceObserver and Paint Timing API | 逐流小站</title>
  




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'G-MW47YH6RH0', 'auto');
  ga('send', 'pageview');
</script>





<meta name="generator" content="Hexo 7.0.0"></head>

<body itemscope itemtype="http://schema.org/WebPage" lang="en">

  
  
    
  

  <div class="container sidebar-position-left page-post-detail">
    <div class="headband"></div>

    <header id="header" class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-wrapper">
  <div class="site-meta ">
    

    <div class="custom-logo-site-title">
      <a href="/"  class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">逐流小站</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
      
        <h1 class="site-subtitle" itemprop="description">想回到那个能随便跳槽的年代</h1>
      
  </div>

  <div class="site-nav-toggle">
    <button>
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
    </button>
  </div>
</div>

<nav class="site-nav">
  

  
    <ul id="menu" class="menu">
      
        
        <li class="menu-item menu-item-home">
          <a href="/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-home"></i> <br />
            
            Home
          </a>
        </li>
      
        
        <li class="menu-item menu-item-tags">
          <a href="/tags/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-tags"></i> <br />
            
            Tags
          </a>
        </li>
      
        
        <li class="menu-item menu-item-categories">
          <a href="/categories/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-th"></i> <br />
            
            Categories
          </a>
        </li>
      
        
        <li class="menu-item menu-item-archives">
          <a href="/archives/" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-archive"></i> <br />
            
            Archives
          </a>
        </li>
      
        
        <li class="menu-item menu-item-sitemap">
          <a href="/sitemap.xml" rel="section">
            
              <i class="menu-item-icon fa fa-fw fa-sitemap"></i> <br />
            
            Sitemap
          </a>
        </li>
      

      
    </ul>
  

  
</nav>



 </div>
    </header>

    <main id="main" class="main">
      <div class="main-inner">
        <div class="content-wrap">
          <div id="content" class="content">
            

  <div id="posts" class="posts-expand">
    

  

  
  
  

  <article class="post post-type-normal" itemscope itemtype="http://schema.org/Article">
  
  
  
  <div class="post-block">
    <link itemprop="mainEntityOfPage" href="https://blog.feedscoin.com/paint-timing-api">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="name" content="">
      <meta itemprop="description" content="">
      <meta itemprop="image" content="/images/avatar.gif">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="逐流小站">
    </span>

    
      <header class="post-header">

        
        
          <h2 class="post-title" itemprop="name headline">PerformanceObserver and Paint Timing API</h2>
        

        <div class="post-meta">
          <span class="post-time">
            
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              
                <span class="post-meta-item-text">Posted on</span>
              
              <time title="Post created" itemprop="dateCreated datePublished" datetime="2017-06-17T09:15:00+08:00">
                2017-06-17
              </time>
            

            

            
          </span>

          

          
            
          

          
          

          

          

          
              <div class="post-description">
                  A quick look at the Paint Timing API to get metrics about render events on our pages.
              </div>
          

        </div>
      </header>
    

    
    
    
    <div class="post-body" itemprop="articleBody">

      
      

      
        <p>In <a target="_blank" rel="noopener" href="https://blog.chromium.org/2017/06/chrome-60-beta-paint-timing-api-css.html">a recent post about Chrome 60 Beta</a>, Google announced the support of the Paint Timing API to get metrics on when your page starts rendering and when the user gets content that can be consumed (more info on the definition of the events below). Here I’m going to describe this new API a bit and show you how to use it.</p>
<span id="more"></span>

<p><img
    src="https://res.cloudinary.com/jmperez/image/upload/w_auto:100:684,f_auto,c_scale/v1510494808/paint-timing-example_byc6z2.png"
    sizes="(max-width: 768px) 100vw, 684px" alt="Example of Paint Timing API entries"/><br><small class="caption">Image taken from the <a target="_blank" rel="noopener" href="https://blog.chromium.org/2017/06/chrome-60-beta-paint-timing-api-css.html">Chrome 60 blog post</a>, which first appeared in <a target="_blank" rel="noopener" href="https://youtu.be/6Ljq-Jn-EgU">“Web Performance: Leveraging the Metrics that Most Affect User Experience”</a> at Google I&#x2F;O 2017</small></p>
<p>Up until now we have been measuring performance through other metrics, mostly using the <a target="_blank" rel="noopener" href="https://developer.mozilla.org/docs/Web/API/Navigation_timing_API">Navigation Timing API</a>, which is also what Google Analytics uses for their <a target="_blank" rel="noopener" href="http://www.ericmobley.net/measuring-performance-google-analytics/">Site Speed report</a>. Yet those metrics don’t tell us the whole picture about the rendering experience.</p>
<p>The <a target="_blank" rel="noopener" href="https://github.com/WICG/paint-timing">Paint Timing API</a> aims to improve this by exposing metrics on paint events that are grouped in two types of entries. By <a target="_blank" rel="noopener" href="https://w3c.github.io/paint-timing/#sec-terminology">its definition</a>:</p>
<ul>
<li><code>&quot;first-paint&quot;</code> entries contain a <code>DOMHighResTimeStamp</code> reporting the time when the browser first rendered after navigation. This excludes the default background paint, but includes non-default background paint. This is the first key moment developers care about in page load – when the browser has started to render the page.</li>
<li><code>&quot;first-contentful-paint&quot;</code> contain a <code>DOMHighResTimestamp</code> reporting the time when the browser first rendered any text, image (including background images), non-white canvas or SVG. This includes text with pending webfonts. This is the first time users could start consuming page content.</li>
</ul>
<p>A picture is worth a thousand words, so let’s see how these entries would be reported by some real web sites:</p>
<p><img
    src="https://res.cloudinary.com/jmperez/image/upload/w_auto:100:684,f_auto,c_scale/v1510476598/paint-timing-filmstrip_anq3pv.png"
    sizes="(max-width: 768px) 100vw, 684px" alt="Filmstrip from several sites showing when Paint Timing API entries are triggered"/><br><small class="caption">Image taken from the <a target="_blank" rel="noopener" href="https://github.com/WICG/paint-timing#examples">Paint timing API repo on WICG</a>.</small></p>
<h4 id="Hacking-on-it"><a href="#Hacking-on-it" class="headerlink" title="Hacking on it"></a>Hacking on it</h4><p>As a hack project I decided to give it a try and implement it on a web site. You have a basic example <a target="_blank" rel="noopener" href="https://github.com/WICG/paint-timing#usage">on the Paint timing page</a>:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> observer = <span class="keyword">new</span> <span class="title class_">PerformanceObserver</span>(<span class="keyword">function</span>(<span class="params">list</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> perfEntries = list.<span class="title function_">getEntries</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; perfEntries.<span class="property">length</span>; i++) &#123;</span><br><span class="line">     <span class="comment">// Process entries</span></span><br><span class="line">     <span class="comment">// report back for analytics and monitoring</span></span><br><span class="line">     <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// register observer for long task notifications</span></span><br><span class="line">observer.<span class="title function_">observe</span>(&#123;<span class="attr">entryTypes</span>: [<span class="string">&quot;paint&quot;</span>]&#125;);</span><br></pre></td></tr></table></figure>

<p>In practice you will probably want to report the information somewhere you can track it. If you are using Google Analytics, you can use <a target="_blank" rel="noopener" href="https://developers.google.com/web/updates/2017/06/user-centric-performance-metrics#tracking_fpfcp">this snippet from Google’s Developer site</a> (ES6):</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">PerformanceObserver</span>(<span class="function">(<span class="params">list</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> entry <span class="keyword">of</span> list.<span class="title function_">getEntries</span>()) &#123;</span><br><span class="line">    <span class="comment">// `name` will be either &#x27;first-paint&#x27; or &#x27;first-contentful-paint&#x27;.</span></span><br><span class="line">    <span class="keyword">const</span> metricName = entry.<span class="property">name</span>;</span><br><span class="line">    <span class="keyword">const</span> time = <span class="title class_">Math</span>.<span class="title function_">round</span>(entry.<span class="property">startTime</span> + entry.<span class="property">duration</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">ga</span>(<span class="string">&#x27;send&#x27;</span>, <span class="string">&#x27;event&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">eventCategory</span>: <span class="string">&#x27;Performance Metrics&#x27;</span>,</span><br><span class="line">      <span class="attr">eventAction</span>: metricName,</span><br><span class="line">      <span class="attr">eventValue</span>: time,</span><br><span class="line">      <span class="attr">nonInteraction</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Start observing paint entries.</span></span><br><span class="line">observer.<span class="title function_">observe</span>(&#123;<span class="attr">entryTypes</span>: [<span class="string">&#x27;paint&#x27;</span>]&#125;);</span><br></pre></td></tr></table></figure>

<h4 id="Word-of-Caution"><a href="#Word-of-Caution" class="headerlink" title="Word of Caution"></a>Word of Caution</h4><p>The API is still experimental and <a target="_blank" rel="noopener" href="https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver">in “Editor’s Draft” state</a>. Also, the fact that a browser supports PerformanceObserver doesn’t mean that it supports the Paint events.</p>
<p>In the quick test I run, the above snippet would throw an exception:</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Uncaught TypeError: Failed to execute ‘observe’ on</span><br><span class="line">‘PerformanceObserver’: A Performance Observer MUST</span><br><span class="line">have at least one valid entryType in its entryTypes</span><br><span class="line">attribute.</span><br></pre></td></tr></table></figure>

<p>It turns out that if you only observe the <code>paint</code> entryType and this is not supported in the browser, <strong>it will throw an exception</strong>. According to <a target="_blank" rel="noopener" href="https://w3c.github.io/performance-timeline/#dom-performanceobserverinit-entrytypes">the specification</a>:</p>
<blockquote>
<p><code>entryTypes</code>: A list of entry names to be observed. The list must not be empty and types not recognized by the user agent must be ignored.</p>
</blockquote>
<p>In short, if you are giving this API a try, make sure you <code>try...catch</code> the <code>observer.observe()</code> call.</p>
<h4 id="Conclusions"><a href="#Conclusions" class="headerlink" title="Conclusions"></a>Conclusions</h4><p>This is a bit in early stages but I’m looking forward to see how the API evolves and we can use it to track Web Performance even better. This will also be a great addition to <a target="_blank" rel="noopener" href="https://developers.google.com/web/tools/lighthouse/">LightHouse</a>, <a target="_blank" rel="noopener" href="http://www.webpagetest.org/">WebPageTest</a>, <a target="_blank" rel="noopener" href="https://calibreapp.com/">Calibre</a> and the rest of tools we use to monitor metrics on our sites.</p>

      
    </div>
    
    
    

    

    

    

    <footer class="post-footer">
      
        <div class="post-tags">
          
            <a href="/tags/performance/" rel="tag"># performance</a>
          
        </div>
      

      
      
      

      
        <div class="post-nav">
          <div class="post-nav-next post-nav-item">
            
              <a href="/2017/06/15/2017/get-hexo-posts-by-category-or-tag/" rel="next" title="Hexo 获取特定分类或标签下的文章">
                <i class="fa fa-chevron-left"></i> Hexo 获取特定分类或标签下的文章
              </a>
            
          </div>

          <span class="post-nav-divider"></span>

          <div class="post-nav-prev post-nav-item">
            
              <a href="/2017/06/18/2017/migrated-to-hexo/" rel="prev" title="博客已迁移至 Hexo">
                博客已迁移至 Hexo <i class="fa fa-chevron-right"></i>
              </a>
            
          </div>
        </div>
      

      
      
    </footer>
  </div>
  
  
  
  </article>



    <div class="post-spread">
      
    </div>
  </div>


          </div>
          


          

  



        </div>
        
          
  
  <div class="sidebar-toggle">
    <div class="sidebar-toggle-line-wrap">
      <span class="sidebar-toggle-line sidebar-toggle-line-first"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-middle"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-last"></span>
    </div>
  </div>

  <aside id="sidebar" class="sidebar">
    
    <div class="sidebar-inner">

      

      
        <ul class="sidebar-nav motion-element">
          <li class="sidebar-nav-toc sidebar-nav-active" data-target="post-toc-wrap">
            Table of Contents
          </li>
          <li class="sidebar-nav-overview" data-target="site-overview-wrap">
            Overview
          </li>
        </ul>
      

      <section class="site-overview-wrap sidebar-panel">
        <div class="site-overview">
          <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
            
              <p class="site-author-name" itemprop="name"></p>
              <p class="site-description motion-element" itemprop="description"></p>
          </div>

          <nav class="site-state motion-element">

            
              <div class="site-state-item site-state-posts">
              
                <a href="/archives/%7C%7C%20archive">
              
                  <span class="site-state-item-count">1579</span>
                  <span class="site-state-item-name">posts</span>
                </a>
              </div>
            

            
              
              
              <div class="site-state-item site-state-categories">
                <a href="/categories/index.html">
                  <span class="site-state-item-count">64</span>
                  <span class="site-state-item-name">categories</span>
                </a>
              </div>
            

            
              
              
              <div class="site-state-item site-state-tags">
                <a href="/tags/index.html">
                  <span class="site-state-item-count">914</span>
                  <span class="site-state-item-name">tags</span>
                </a>
              </div>
            

          </nav>

          

          

          
          

          
          

          

        </div>
      </section>

      
      <!--noindex-->
        <section class="post-toc-wrap motion-element sidebar-panel sidebar-panel-active">
          <div class="post-toc">

            
              
            

            
              <div class="post-toc-content"><ol class="nav"><li class="nav-item nav-level-4"><a class="nav-link" href="#Hacking-on-it"><span class="nav-number">1.</span> <span class="nav-text">Hacking on it</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#Word-of-Caution"><span class="nav-number">2.</span> <span class="nav-text">Word of Caution</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#Conclusions"><span class="nav-number">3.</span> <span class="nav-text">Conclusions</span></a></li></ol></div>
            

          </div>
        </section>
      <!--/noindex-->
      

      

    </div>
  </aside>


        
      </div>
    </main>

    <footer id="footer" class="footer">
      <div class="footer-inner">
        <div class="copyright">&copy; <span itemprop="copyrightYear">2024</span>
  <span class="with-love">
    <i class="fa fa-user"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">Laird Lau</span>

  
</div>


  <div class="powered-by">Powered by <a class="theme-link" target="_blank" href="https://hexo.io">Hexo</a></div>



  <span class="post-meta-divider">|</span>



  <div class="theme-info">Theme &mdash; <a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next">NexT.Muse</a> v5.1.4</div>




        







        
      </div>
    </footer>

    
      <div class="back-to-top">
        <i class="fa fa-arrow-up"></i>
        
      </div>
    

    

  </div>

  

<script type="text/javascript">
  if (Object.prototype.toString.call(window.Promise) !== '[object Function]') {
    window.Promise = null;
  }
</script>









  












  
  
    <script type="text/javascript" src="/lib/jquery/index.js?v=2.1.3"></script>
  

  
  
    <script type="text/javascript" src="/lib/fastclick/lib/fastclick.min.js?v=1.0.6"></script>
  

  
  
    <script type="text/javascript" src="/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7"></script>
  

  
  
    <script type="text/javascript" src="/lib/velocity/velocity.min.js?v=1.2.1"></script>
  

  
  
    <script type="text/javascript" src="/lib/velocity/velocity.ui.min.js?v=1.2.1"></script>
  

  
  
    <script type="text/javascript" src="/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5"></script>
  


  


  <script type="text/javascript" src="/js/src/utils.js?v=5.1.4"></script>

  <script type="text/javascript" src="/js/src/motion.js?v=5.1.4"></script>



  
  

  
  <script type="text/javascript" src="/js/src/scrollspy.js?v=5.1.4"></script>
<script type="text/javascript" src="/js/src/post-details.js?v=5.1.4"></script>



  


  <script type="text/javascript" src="/js/src/bootstrap.js?v=5.1.4"></script>



  


  




	





  





  












  





  

  

  

  
  

  

  

  

</body>
</html>
